/Users/remy/.gem/ruby/2.0.0/gems/R4rb-1.0.0/lib/R4rb.3.2.bundle found
/Users/remy/.gem/ruby/2.0.0/gems/R4rb-1.0.0/lib/R4rb.3.2.bundle loaded
[1mMultithreaded BLAS/LAPACK libraries detected. Using 8 cores for math algorithms.
[0m[1] "/Library/Frameworks/R.framework/Versions/3.2/Resources/library"
[1mLe chargement a nÃ©cessitÃ© le package : rb4R
[0mFIRST INIT OF R!!!! => true
["test_bug", "", "", :tex, ".tex"]
make_all
[:make_content, :save]

make content for test_bug in .
init_tags
[/^tex$/]
blckname
[nil, [:blck, :out, [:main, ""], [:var, [:main, "::_USEPACKAGE_[+],::_PREAMBLE_[+], ::_POSTAMBLE_[+],::_BEGINDOC_[+],::_ENDDOC_[+],::_TITLE_[+]"], :",", [:main, "::_DOCUMENTCLASS_[+] => article"], :",", [:main, "::_STYLEDOC_[+]=>"], :",", [:main, "::_OPTCLASS_[+]=>"]], [:main, ""], [:rb, [:main, "_optclass_=[]"]], [:main, "\n\\documentclass#\#{_OPTCLASS_}{#\#{_DOCUMENTCLASS_}}\n%Packages\n#\#{_USEPACKAGE_}\n%Preamble\n#\#{_PREAMBLE_}\n%Styles\n#\#{_STYLEDOC_}\n%Title\n#\#{_TITLE_}\n\\begin{document}\n#\#{_BEGINDOC_}\n\n"]]]
blckname
[nil, [:blck, :out, [:main, ""], [:require, [:main, "\nStd/Utils\nStd/File\nStd/OOP\nStd/DynVar\nStd/Array\nStd/List\nStd/String\nStd/Verb\nStd/Signal\nStd/DevTag\nStd/Composer\nTools/R/Fig\nTools/R/Tools\nTools/Tex/Table\nTools/Tex/Tools\nStd/Styles\n"]], [:main, "\n\n"], [:newBlck, [:main, "jqmTabsNavBar"], :aggregate, [:main, "tab\n"], :blck, [:main, ":pre"], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :blck, [:main, "tab"], :do_code, [:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"], :blck, [:main, ":post\n"], :"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]], [:main, "\n\n"], [:newBlck, [:main, "jqmTabsNavBar2"], :aggregate, [:main, "tab\n"], :blck, [:main, ":pre"], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :blck, [:main, "tab"], :do_code, [:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"], :blck, [:main, ":post\n"], :"=", [:named, "::tabss"], :"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\ntabs.each do |tab| #\n  p [:tab,tab]\n  "], [:<, "[#+]::tabss[:{tab[:body]}]"], [:main, "\nend\n"]], :>, [:main, "#\#{tabss}\n"]], [:main, "\n\n"], [:set, [:args, [:main, "_USEPACKAGE_!+"]], [:blck, :>, [:main, "\\usepackage{graphicx}<\\n>"]]], [:main, "\n\n"], [:set, [:args, [:main, "_USEPACKAGE_!+\n"]], [:blck, :>, [:main, "\\usepackage[utf8x]{inputenc}\n\\usepackage[T1]{fontenc}\n\\usepackage{aeguill}\n\\usepackage{amssymb}\n"]]], [:main, "\n\n"]]]
blckname
[nil, [:blck, :out, [:main, ""], [:def, [:args, [:main, "var.apply"]], :",", [:named, "var"], :",", [:named, "meth", [:main, "strip"]], :<, [:main, " "], [:hide, [:main, " "], [:rb, [:main, "p \"\#{var}\";p @vars[\"\#{var}\"]"]], [:main, " "]], [:main, "\n"], :>, [:main, ":{@vars[\"\#{var}\"].\#{meth}}"]], [:main, " \n\n"], [:def, [:args, [:main, "cfg"]], :",", [:named, "elt"], :>, [:main, "#Rb{@cfg[\#{elt}]}"]], [:main, "\n\n"], [:def, [:args, [:main, "output"]], :>, [:main, "#Rb{@cfg[:output].to_s}"]], [:main, "\n\n"], [:def, [:args, [:main, "output?"]], :",", [:named, "elt"], :>, [:main, "#Rb{@cfg[:output] == \#{elt}}"]], [:main, "\n\n"], [:def, [:args, [:main, "num?"]], :",", [:named, "elt"], :>, [:main, "#Rb{\"\#{elt}\" == (\"\#{elt}\".to_i.to_s)}"]], [:main, "\n\n\n"], [:def, [:args, [:main, "empty"]], :",", [:named, "elt"], :>, [:main, "#Rb{\"\#{elt}\"==\"\"}"]], [:main, "\n\n"], [:def, [:args, [:main, "varEmpty"]], :",", [:named, "v"], :>, [:main, "#Rb{vars[\"\#{v}\"].empty?}"]], [:main, "\n\n"], [:def, [:args, [:main, "ifEmpty"]], :",", [:named, "v"], :",", [:named, "true"], :",", [:named, "false"], :>, [:main, ""], [:if, [:args, [:main, "@{varEmpty(\#{v})}"]], [:blck, :>, [:main, "\#{true}"]], :else, [:blck, :out, [:main, "\#{false}"]]], [:main, ""]], [:main, "\n\n\n"], [:def, [:args, [:main, "equal"]], :",", [:named, "elt"], :",", [:named, "elt2"], :>, [:named, "#Rb{\"\#{elt}\"==\"\#{elt2}\"}]"]], [:main, "\n\n"], [:def, [:args, [:main, "varEqual"]], :",", [:named, "v"], :",", [:named, "elt"], :>, [:main, "#Rb{@vars[\"\#{v}\"]==\"\#{elt}\"}"]], [:main, "\n\n"], [:def, [:args, [:main, "ifEqual"]], :",", [:named, "v"], :",", [:named, "elt"], :",", [:named, "true"], :",", [:named, "false"], :>, [:main, ""], [:if, [:args, [:main, "@{varEqual(\#{v}|\#{elt})}"]], [:blck, :>, [:main, "\#{true}"]], :else, [:blck, :out, [:main, "\#{false}"]]], [:main, ""]], [:main, "\n\n"], [:def, [:args, [:main, "include|"]], :",", [:named, "set"], :",", [:named, "elt"], :",", [:named, "sep"], :"rb<", [:args, [:main, "res=\"\#{set}\".split(\"\#{sep}\").map{|e|  e.strip}.include? \"\#{elt}\""]], :>, [:main, "#Rb{res}"]], [:main, "\n\n"], [:def, [:args, [:main, "varInclude"]], :",", [:named, "v"], :",", [:named, "elt"], :",", [:named, "sep)"], :"rb<", [:args, [:main, "res=vars[\"\#{v}\"].split(\"\#{sep}\").map{|e| e.strip}.include? \"\#{elt}\""]], :>, [:main, "#Rb{res}"]], [:main, "\n\n\n"], [:def, [:args, [:main, "ifInclude"]], :",", [:named, "v"], :",", [:named, "elt"], :",", [:named, "true"], :",", [:named, "false"], :>, [:main, ""], [:if, [:args, [:main, "@{varInclude(\#{v}|\#{elt})}"]], [:blck, :>, [:main, "\#{true}"]], :else, [:blck, :out, [:main, "\#{false}"]]], [:main, ""]], [:main, "\n\n"], [:def, [:args, [:main, "ifElse"]], :",", [:named, "cond"], :",", [:named, "true"], :",", [:named, "false"], :>, [:main, ""], [:if, [:args, [:main, "\#{cond}"]], [:blck, :>, [:main, "\#{true}"]], :else, [:blck, :out, [:main, "\#{false}"]]], [:main, ""]], [:main, ""]]]
blckname
[nil, [:blck, :out, [:main, ""], [:def, [:args, [:main, "pwd"]], :>, [:main, "\#{_PWD_}"]], [:main, "\n\n"], [:def, [:args, [:main, "filename"]], :>, [:main, "\#{_FILENAME_}"]], [:main, "\n\n"], [:def, [:args, [:main, "curpath"]], :",", [:named, "name"], :"rb>", [:main, "File.join(File.dirname(\"\#{_FILENAME_}\"),\"\#{name}\")"]], [:main, "\n\n"], [:def, [:args, [:main, "curExpPath"]], :",", [:named, "name"], :"rb>", [:main, "require 'dyndoc/common/file';CqlsDoc.expand_path(File.join(File.dirname(\"\#{_FILENAME_CURRENT_}\"),\"\#{name}\"))"]], [:main, "\n\n"], [:def, [:args, [:main, "home"]], :"rb>", [:main, "ENV[\"HOME\"]"]], [:main, "\n\n"], [:def, [:args, [:main, "modedoc"]], :"rb>", [:main, "Dyndoc.tmpl_mngr.fmt"]], [:main, "\n\n"], [:def, [:args, [:main, "local_use"]], :"rb>", [:named, "$dyndoc_web and $dyndoc_web", [:main, ":local"]]], [:main, "\n\n\nThis doc mode is used to know if it is obtained by web\n"], [:def, [:args, [:main, "dyndoc_mode"]], :"rb>", [:main, "Dyndoc.tmpl_mngr.dyndocMode.inspect"]], [:main, "\n\n"], [:def, [:args, [:main, "format_output"]], :"rb>", [:main, "Dyndoc.tmpl_mngr.fmtOutput"]], [:main, "\n\n"], [:def, [:args, [:main, "cqlsdir"]], :"rb>", [:main, "File.join(ENV[\"HOME\"],\"cqls\")"]], [:main, "\n\n"], [:def, [:args, [:main, "dyndir"]], :"rb>", [:main, "File.join(ENV[\"HOME\"],\"dyndoc\")"]], [:main, "\n\n"], [:def, [:args, [:main, "prjpath"]], :",", [:named, "prj"], :",", [:named, "type", [:main, "rsrc"]], :>, [:main, ""], [:case, [:args, [:main, "\#{type}\n"]], :when, [:args, [:main, "rsrc"]], [:blck, :"rb>", [:main, "File.join(ENV[\"CQLS_PRJ_ROOT\"],\"share\",\"rsrc\",\"\#{prj}\")"]], :when, [:args, [:main, "img"]], [:blck, :"rb>", [:main, "File.join(ENV[\"CQLS_PRJ_ROOT\"],\"share\",\"rsrc\",\"\#{prj}\",\"img\")"]], :when, [:args, [:main, "data"]], [:blck, :"rb>", [:main, "File.join(ENV[\"CQLS_PRJ_ROOT\"],\"share\",\"rsrc\",\"\#{prj}\",\"data\")"]]], [:main, ""]], [:main, "\n\n"], [:def, [:args, [:main, "cqlsweb_path"]], :",", [:named, "path"], :",", [:named, "root", [:main, "/export/cqlsWeb"]], :"rb>", [:main, "dyndocWeb_path=(File.exists? File.join(ENV[\"HOME\"],\"dyndoc\",\"web\")) ? File.join(ENV[\"HOME\"],\"dyndoc\",\"web\") : \#{=root}\nFile.join(dyndocWeb_path,\#{=path})\n"]], [:main, "\n\n"], [:def, [:args, [:main, "cqlsweb_rsrc_path"]], :",", [:named, "path"], :>, [:main, ""], [:call, [:args, [:main, "cqlsweb_path"]], [:main, "public/rsrc/\#{path}"]], [:main, ""]], [:main, "\n\n"], [:def, [:args, [:main, "cqlsweb_auto_img"]], :",", [:named, "path"], :",", [:named, "max", [:main, "5000"]], :"=", [:named, "path2", [:main, ""], [:call, [:args, [:main, "cqlsweb_path"]], [:main, "public/rsrc/img/\#{path}"]], [:main, ""]], :"rb<", [:args, [:main, "now=Time.now;Dir[\"\#{path2}*\"].each {|f| begin p f;FileUtils.rm(f) end if now-File.mtime(f) > 60}\n"]], :>, [:main, "\#{path2}:{`uuidgen`.strip}"]], [:main, "\n\n"], [:def, [:args, [:main, "cqlsweb_public_imgName"]], :",", [:named, "path"], :"rb<", [:args, [:main, "root=\""], [:call, [:args, [:main, "cqlsweb_path"]], [:named, "path"]], [:main, "\"+\"public/\"\nputs \"root\";p root\nrbpath=\#{=path}\np rbpath\ntmp=/^\#{root}/.match(rbpath)\np tmp\nres = tmp ? tmp.post_match : \"error\"\n"]], :>, [:main, ":{\"/\"+res}\n"]], [:main, ""]]]
blckname
[nil, [:blck, :out, [:main, "\n"], [:meth, [:args, [:main, "class.Object"]], :>, [:main, "\#{self.Class}"]], [:main, "\n\n"], [:meth, [:args, [:main, "objname.Object"]], :>, [:main, "\#{self.ObjectName}"]], [:main, "\n\n"], [:meth, [:args, [:main, "self.Object"]], :>, [:main, ":\#{self.ObjectName}"]], [:main, "\n\n"], [:meth, [:args, [:main, "link.Object"]], :",", [:named, "to"], :<, [:main, ""], [:if, [:args, [:main, "@vars.extract(\"self\").respond_to? \"keys\" and @vars.extract(\#{=to}).respond_to? \"keys\"\n"]], [:blck, :"rb<", [:args, [:main, "p \#{=to};p @vars.extract(\"self\").keys; p @vars.extract(\#{=to}).keys;p \#{=to}\nvset=@vars.extract(\#{=to}).keys - @vars.extract(\"self\").keys\ni=-1\n"]], :<, [:main, ""], [:loop, [:blck, :"rb<", [:args, [:main, "v=vset[i+=1]\np v;p [\#{=.ObjectName},\#{=to}]\n"]], :"=", [:named, ".:{v}", [:main, ":\#{to}.:{v}"]]], :break, [:args, [:main, "vset.length==i\n"]]], [:main, "\n"]]], [:main, "\n"]], [:main, "\n\n"], [:meth, [:args, [:main, "inspect.Object"]], :",", [:named, "verbatim", [:main, "true"]], :"?", [:args, [:main, "\#{verbatim}"]], :>, [:main, "\\begin{verbatim}\n"], :>, [:main, "Class: [\#{self.Class}]"], :"?", [:args, [:main, "\#{=self.ObjectName}"]], :>, [:main, "\n  |ObjectName: [\#{self.ObjectName}]\n  |True variable content: \n  |:{@vars.extract_list(\#{=self.ObjectName})}"], :"?", [:args, [:main, "\#{=self.content}"]], :>, [:main, "\n  |self variable content:\n  |:{@vars.extract_list(\"self.content\")}"], :"?", [:args, [:main, "\#{verbatim}"]], :>, [:main, "<\\n>\\end"], :>, [:main, "{verbatim}"]], [:main, "\n\n"]]]
blckname
[nil, [:blck, :out, [:main, ""], [:meth, [:args, [:main, "set.DynVar"]], :",", [:named, "field", [:main, ":out"]], :",", [:named, "content"], :"rb<", [:args, [:main, "@vars.extract_raw(\#{=.ObjectName})[\#{field}]=\#{=content}"]]], [:main, "\n\n"], [:meth, [:args, [:main, "delete.DynVar"]], :",", [:named, "field", [:main, ":out"]], :"?", [:args, [:main, "\#{=field}[0,1]!=\":\""]], :"=", [:named, "field", [:main, ":\#{field}"]], :"?", [:args, [:main, "\#{field} != :val"]], :"rb<", [:args, [:main, "@vars.extract_raw(\#{=.ObjectName}).delete(\#{field})\n"]]], [:main, "\n\n"], [:meth, [:args, [:main, "rep.DynVar"]], :>, [:main, ""], [:call, [:args, [:main, "rep"]], [:main, "\#{\#{.ObjectName}}"]], [:main, ""]], [:main, "\n\n"], [:meth, [:args, [:main, "split.DynVar"]], :",", [:named, "field", [:main, ":split"]], :",", [:named, "sep", [:main, "&"]], :"rb<", [:args, [:main, " @vars.extract_raw(\#{=.ObjectName})[\#{field}]=\#{=.content}.split(\#{=sep})"]]], [:main, "\n\n"], [:meth, [:args, [:main, "replicate.DynVar"]], :",", [:named, "along"], :",", [:named, "field", [:main, ":out"]], :"?", [:args, [:main, "\#{=field}[0,1]!=\":\""]], :"=", [:named, "field", [:main, ":\#{field}"]], :"?", [:args, [:main, "\#{field} != :val\n"]], :"rb<", [:args, [:main, "var,indices=\#{=along}.split(\" in \").map{|e| e.strip}\n#p indices\n"]], :"rb<", [:args, [:main, "indices=:r{c(:{indices})} #rb< is required!\n#p indices\nres=[]"]], :"rb<", [:args, [:main, " \nfor :{var} in indices do \n  res << "], [:<, "\#{.content!}"], [:main, "\nend\n@vars.extract_raw(\#{=.ObjectName})[\#{field}]=res\n"]]], [:main, "\n"]]]
blckname
[nil, [:blck, :out, [:main, ""], [:meth, [:args, [:main, "each_with_index.Array"]], :",", [:named, "fct"], :"?", [:args, [:main, "\#{0?fct}"]], :"rb>", [:main, "\n@vars.extract_raw(\".content\").each_with_index do |v,i| #\n  "], [:>, "[#=].index[:{i}][#=].value[:{v[:val]}][#yield]default"], [:main, "\nend\n"], :"?", [:args, [:main, "else"]], :"rb>", [:main, "\n@vars.extract_raw(\".content\").each_with_index do |v,i| #\n  "], [:>, "[#=].index[:{i}][#=].value[:{v[:val]}][#>]{#call]\#{fct}[#,]\#{.index}[#,]\#{.value}[#call}"], [:main, "\nend\n"]], [:main, "\n\n"], [:meth, [:args, [:main, "each.Array"]], :",", [:named, "fct"], :"?", [:args, [:main, "\#{0?fct}"]], :"rb>", [:main, "\n@vars.extract_raw(\".content\").each do |v| #\n  "], [:>, "[#=].value[:{v[:val]}][#yield]default"], [:main, "\nend\n"], :"?", [:args, [:main, "else"]], :"rb>", [:main, "\n@vars.extract_raw(\".content\").each do |v| #\n  "], [:>, "[#=].value[:{v[:val]}][#>]{#call]\#{fct}[#,]\#{.value}[#call}"], [:main, "\nend\n"]], [:main, "\n\n"], [:meth, [:args, [:main, "map.Array"]], :",", [:named, "fct"], :"?", [:args, [:main, "\#{0?fct}"]], :"rb<", [:args, [:main, "##Dyndoc.warn 'toto'\n@vars.extract_raw(\".content\").map! do |v| #\n  res="], [:>, "[#=].value[:{v[:val]}][#yield]default"], [:main, "\n  ##Dyndoc.warn :res,{val: [res]}\n  {val: [res]}\nend\n"]], :"?", [:args, [:main, "else"]], :"rb<", [:args, [:main, "##Dyndoc.warn 'toto2'\n@vars.extract_raw(\".content\").map! do |v| #\n  res="], [:>, "[#=].value[:{v[:val]}][#>]{#call]\#{fct}[#,]\#{.value}[#call}"], [:main, "\n  ##Dyndoc.warn :res,{val: [res]}\n  {val: [res]}\nend\n"]]], [:main, "\n\n"], [:meth, [:args, [:main, "join.Array"]], :",", [:named, "sep", [:main, ","]], :"rb>", [:main, "@vars.extract(\"self.content\").join(\#{=sep})"]], [:main, "\n\n"], [:meth, [:args, [:main, "add.Array"]], :",", [:main, "elt"], :",", [:named, "pos", [:main, "-1"]], :"rb<", [:args, [:main, "\n@vars.extract_raw(\"self.content\").insert(\#{pos},@vars.extract_raw(\"elt\"))\n"]], :>, [:main, ""], [:call, [:args, [:main, "join"]], [:main, "self"]], [:main, ""]], [:main, "\n\n## OLD STUFF to check!\n\n"], [:def, [:args, [:main, "Array"]], :",", [:main, "ary"], :",", [:main, "parent\n"], :"?", [:args, [:main, "\#{+?parent}"]], :"rb<", [:args, [:main, "@vars.extract_raw(\#{=parent})[\#{=ary}]=[]\n"]], :"?", [:args, [:main, "else"]], :"rb<", [:args, [:main, "@vars.local[:prev][\#{=ary}]=[]\n"]]], [:main, "\n\n"], [:def, [:args, [:main, "length"]], :",", [:main, "ary"], :>, [:main, "\#{# \#{ary}}"]], [:main, "\n\n"], [:meth, [:args, [:main, "compact.Array"]], :"rb<", [:args, [:main, "\n@vars.extract_raw(\"self.content\").map!{|e| (e[:val][0].empty? ? nil : e )}.compact!\n"]]], [:main, "\n\n"], [:hide, [:main, "OLD!!!"], [:meth, [:args, [:main, "join.Array"]], :",", [:named, "sep"], :"rb>", [:main, "\#{=self.content}.join(\#{=sep})"]], [:main, ""]], [:main, "\n\n"], [:meth, [:args, [:main, "apply.Array"]], :",", [:named, "_elt_", [:main, "elt"]], :"rb>", [:named, "_elt_", [:main, "\#{=_elt_}.strip"]], :"rb<", [:args, [:main, "\n@nb={} unless @nb\n@nb[\#{=_elt_}]=\#{#.content}\n@ind={} unless @ind\n@ind[\#{=_elt_}]=-1\n"]], :>, [:main, ""], [:loop, [:blck, :"rb<", [:args, [:main, "[@ind[\#{=_elt_}]+=1]\n"]], :"=", [:named, "\#{_elt_}", [:main, ":self.content.:{@ind[\#{=_elt_}]}"]], :"=", [:named, "ind_\#{_elt_}", [:main, ":{@ind[\#{=_elt_}]}"]], :yield, [:main, "default\n"]], :break, [:args, [:main, ":{@ind[\#{=_elt_}]==@nb[\#{=_elt_}]-1}\n"]]], [:main, ""], :"rb<", [:args, [:main, "@ind[\#{=_elt_}]=-1\n"]]], [:main, "\n\n"], [:meth, [:args, [:main, "mapOLD.Array"]], :",", [:named, "_elt_", [:main, "elt"]], :"rb>", [:named, "_elt_", [:main, "\#{=_elt_}.strip"]], :"rb<", [:args, [:main, "\n@nb={} unless @nb\n@nb[\#{=_elt_}]=\#{#.content}\n@ind={} unless @ind\n@ind[\#{=_elt_}]=-1\n"]], :>, [:main, ""], [:loop, [:blck, :"rb<", [:args, [:main, "@ind[\#{=_elt_}]+=1\n"]], :>, [:named, "\#{_elt_}", [:main, "\#{.content.:{@ind[\#{=_elt_}]}}"]], :>, [:named, "updated\#{_elt_}", [:main, ".content.:{@ind[\#{=_elt_}]}"]], :>, [:named, "\#{updated\#{_elt_}}", [:main, ""], [:yield, [:main, "default"]], [:main, ""]]], :break, [:args, [:main, ":{@ind[\#{=_elt_}]==@nb[\#{=_elt_}]-1}\n"]]], [:main, ""]], [:main, "\n"]]]
blckname
[nil, [:blck, :out, [:main, "## each and keys methods for List class (see dyndoc-ruby-demo/BaseLang/List.dyn)\n\n\n"], [:hide, [:main, "\nDoes not work! To debug! \n"], [:meth, [:args, [:main, "keys.List"]], :"rb>", [:main, "@vars.extract(\"self.content\").keys"]], [:main, "\n"]], [:main, "\n\n"], [:meth, [:args, [:main, "listkeys.List"]], :"rb>", [:main, "@vars.extract(\"self.content\").keys"]], [:main, "\n\n"], [:meth, [:args, [:main, "each.List"]], :",", [:named, "fct"], :"?", [:args, [:main, "\#{0?fct}"]], :"rb>", [:main, "\n@vars.extract_raw(\".content\").each do |k,v| #\n  "], [:>, "[#=].key[:{k}][#=].value[:{v[:val]}][#yield]default"], [:main, "\nend\n"], :"?", [:args, [:main, "else"]], :"rb>", [:main, "\n@vars.extract_raw(\".content\").each do |k,v| #\n  "], [:>, "[#=].key[:{k}][#=].value[:{v[:val]}][#>]{#call]\#{fct}[#,]\#{.key}[#,]\#{.value}[#call}"], [:main, "\nend\n"]], [:main, "\n\n## The code below is just here for old compatibility but would be remove or update soon\n\n"], [:def, [:args, [:main, "List"]], :",", [:main, "list"], :"rb<", [:args, [:main, "@vars.local[:prev][\#{=list}]={}"]]], [:main, "\n\n"], [:meth, [:args, [:main, "apply.List"]], :",", [:named, "_key_", [:main, "key"]], :",", [:named, "_elt_", [:main, "val"]], :"rb>", [:named, "_key_", [:main, "\#{=_key_}.strip"]], :"rb>", [:named, "_elt_", [:main, "\#{=_elt_}.strip"]], :"rb<", [:args, [:main, "\n@nb={} unless @nb\n@keysList={} unless @keysList\n@nb[\#{=_elt_}]=\#{#.content}\n@keysList[\#{=_elt_}]=@vars.extract(\"self.content\").keys.sort\n@ind={} unless @ind\n@ind[\#{=_elt_}]=-1\n"]], :>, [:main, ""], [:loop, [:blck, :"rb<", [:args, [:main, "[@ind[\#{=_elt_}]+=1]\n"]], :"=", [:named, "\#{_key_}", [:main, ":{@keysList[\#{=_elt_}][@ind[\#{=_elt_}]]}"]], :"=", [:named, "\#{_elt_}", [:main, ":self.content.\#{\#{_key_}}"]], :yield, [:main, "default\n"]], :break, [:args, [:main, ":{@ind[\#{=_elt_}]==@nb[\#{=_elt_}]-1}\n"]]], [:main, ""], :"rb<", [:args, [:main, "@ind[\#{=_elt_}]=-1\n@nb.delete(\#{=_elt_})\n@keysList.delete(\#{=_elt_})\n"]]], [:main, "\n"]]]
blckname
[nil, [:blck, :out, [:main, ""], [:meth, [:args, [:main, "rep.String"]], :",", [:named, "nb", [:main, "1"]], :",", [:named, "sep"], :",", [:named, "along"], :"?", [:args, [:main, "\#{0?along}"]], :"rb>", [:main, "(\#{=.content.value}+\#{=sep})*(\#{nb}-1)"], :>, [:main, "\#{.content.value}"], :"?", [:args, [:main, "else"]], :%, [:main, "string is supposed to be a #code block\n"], :"rb<", [:args, [:main, "res=[]"]], :<, [:main, ""], [:for, [:args, [:main, "\#{along}"]], :"rb<", [:args, [:main, "res << \#{=.content.value!}"]]], [:main, "\n"], :"rb>", [:main, "res.join(\#{=sep})"]], [:main, "\n\n"], [:meth, [:args, [:main, "join.String"]], :",", [:named, "sep"], :>, [:main, ""], [:call, [:args, [:main, "join"]], [:main, "self.content.ary"]], [:main, ""]], [:main, "\n\n"], [:meth, [:args, [:main, "apply.String"]], :",", [:named, "_elt_", [:main, "elt"]], :"rb<", [:args, [:main, "\n  @nb={} unless @nb\n  @nb[\#{=_elt_}]=\#{#.content.ary}\n  @ind={} unless @ind\n  @ind[\#{=_elt_}]=-1\n"]], :>, [:main, ""], [:loop, [:blck, :"rb<", [:args, [:main, "@ind[\#{=_elt_}]+=1\n  "]], :>, [:named, "\#{_elt_}", [:main, "\#{self.content.ary.:{@ind[\#{=_elt_}]}}"]], :yield, [:main, "default\n  "]], :break, [:args, [:main, ":{@ind[\#{=_elt_}]==@nb[\#{=_elt_}]-1}\n"]]], [:main, ""]], [:main, "\n"]]]
blckname
[nil, [:blck, :out, [:main, ""], [:def, [:args, [:main, "beginVerb"]], :",", [:named, "mode", [:main, ""], [:call, [:args, [:main, "modedoc"]]], [:main, ""]], :"rb>", [:main, "CqlsDoc::VERB[:\#{mode}][:begin]"]], [:main, "\n\n"], [:def, [:args, [:main, "endVerb"]], :",", [:named, "mode", [:main, ""], [:call, [:args, [:main, "modedoc"]]], [:main, ""]], :"rb>", [:main, "CqlsDoc::VERB[:\#{mode}][:end]"]], [:main, "\n\n"], [:def, [:args, [:main, "verb"]], :",", [:named, "mode", [:main, "tex"]], :"rb>", [:main, "CqlsDoc::VERB[:\#{mode}][:begin]"], :yield, [:main, "default"], :"rb>", [:main, "CqlsDoc::VERB[:\#{mode}][:end]"]], [:main, ""]]]
blckname
[nil, [:blck, :out, [:main, "\n"], [:def, [:args, [:main, "connect"]], :",", [:named, "signal"], :",", [:named, "object"], :",", [:named, "method"], :",", [:named, "priority", [:main, "100"]], :"rb<", [:args, [:main, "\n$dyn_signal[\#{=signal}]=[] unless $dyn_signal[\#{=signal}]\n$dyn_signal[\#{=signal}] << [\#{priority},\#{=object},\#{=method}]\n$dyn_signal[\#{=signal}].sort!{|e,e2| ((e[0]<e2[0] or (e[0]==e2[0] and e[1]<e2[1])) ? -1 : 1)}\n"]]], [:main, "\n \n"], [:def, [:args, [:main, "emit"]], :",", [:named, "signal"], :",", [:named, "args"], :"rb<", [:args, [:main, "\n  signal=$dyn_signal[\#{=signal}]\n  ind=-1\n  "]], :>, [:main, ""], [:loop, :break, [:args, [:main, "ind==signal.length-1\n\t"]], [:blck, :"rb<", [:args, [:main, "[priority,object,method=signal[ind+=1]]\n\t"]], :>, [:main, ""], [:call, [:args, [:main, ":{method}"]], :",", [:main, ":{object}"], :",", [:named, "_args_", [:main, ":args"]]], [:main, ""]]], [:main, "\n"]], [:main, ""]]]
blckname
[nil, [:blck, :out, [:main, "=================================\n| devtag items-like declaration |\n=================================\n\n"], [:def, [:args, [:main, "dtagNew"]], :",", [:named, "dtag!"], :",", [:named, "items!"], :"=", [:named, "do_items"], :"rb<", [:args, [:main, "p @vars.local[\"items\"].keys\nitems=@vars.local[\"items\"].keys-[\"_order_\"]\nitems -= (var_items=items.select{|it| it=~/^var\\_/})\nitems -= (pre_items=items.select{|it| it=~/^pre\\_/})\nitems -= (post_items=items.select{|it| it=~/^post\\_/})\n"]], :>, [:named, "items4rb", [:main, ":{items.map{|it| \":\"+it}.join(\",\")}"]], :>, [:named, "do_items+", [:main, "\nitems=[\#{items4rb}]\nblckMngr.next_child_until!(items)\n"]], :"rb<", [:args, [:main, "\nfor item in pre_items.sort do\n"], [:>, "do_items+[\n\t\#{items.:{item}}\n]\n"], [:main, "\nend\n"]], :>, [:named, "do_items+", [:main, "begin\n  case blckMngr.next_tag!"]], :"rb<", [:args, [:main, "\nfor item in items do\n"], [:>, "do_items+[\n\twhen ::{item}\n\t\tblckMngr.next_child!\n\t\t\#{items.:{item}}\n]\n"], [:main, "\nend\n"]], :>, [:named, "do_items+", [:main, "\n\telse #just in the case where other tags are added but normally this does not make sense!\n    \tblckMngr.next_child!\n  \tend\n  end until blckMngr.at_end?\n"]], :"rb<", [:args, [:main, "\nfor item in post_items.sort do\n"], [:>, "do_items+[\n\t\#{items.:{item}}\n]\n"], [:main, "\nend\n"]], :"rb<", [:args, [:main, "#puts \#{=do_items}\n"]], :"rb<", [:args, [:main, "<CqlsDoc>#CqlsDoc envir!\nDYN[:V3].tmpl.add_dtag({\n\t:instr=>[\#{=dtag}],\n\t:keyword_reg=>{\n\t\t:\#{dtag}=> '[%.\\w,><?=+:-]+'\n\t},\n\t:blck=>{\n  \t\t:instr=>[:\#{dtag}],\n  \t\t:keyword=>{:\#{dtag}=>[\#{items4rb}]}\n\t}\n})\n\nmodule V3\n    class TemplateManager\n      \tdef do_\#{dtag}(tex,blck,filter)\n      \t\t##p blck\n      \t\tblckMngr=BlckMngr.new(self,blck,tex,filter)\n      \t\t## the next code is automatically generated!\n      \t\t\#{do_items}\n      \tend\n    end\nend\n"]]], [:main, "\n\n\n===================================\n| More general devtag declaration |\n===================================\n\n"], [:def, [:args, [:main, "dtag"]], :",", [:named, "dtag!"], :",", [:named, "items!"], :",", [:named, "do_items!"], :"?", [:args, [:main, "\#{+?items}"]], :"rb>", [:named, "items", [:main, "\#{=items}.split(\",\").map{|e| \":\"+e.strip}.join(\",\")"]], :"?", [:args, [:main, "end\n"]], :"rb<", [:args, [:main, "<CqlsDoc>#CqlsDoc envir!\nDYN[:V3].tmpl.add_dtag({\n:instr=>[\#{=dtag}],\n:keyword_reg=>{\n:\#{dtag}=> '[%.\\w,><?=+:-]+'\n},\n:blck=>{\n  :instr=>[:\#{dtag}],\n  :keyword=>{:\#{dtag}=>[\#{items}]}\n}\n})\n\nmodule V3\n    class TemplateManager\n      \tdef do_\#{dtag}(tex,blck,filter)\n      \t\tblckMngr=BlckMngr.new(self,blck,tex,filter)\n      \t\titems=[\#{items}]\n      \t\t\#{do_items}\n      \tend\n    end\nend\n"]]], [:main, ""]]]
blckname
[nil, [:blck, :out, [:main, "example: argument of the #Compose function is of the form\nlist of lines containing \"|\"-separated list of elements of the form\n<caseVar in tmplPartDoc> = < tmplPartDoc > : <comma separated list of part> \ndefault value for is \"docs\"\n\n"], [:hide, [:main, ""], [:def, [:args, [:main, "Compose"]], :",", [:named, "list"], :"rb<", [:args, [:main, "docs=\#{=list}.split(\"\\n\").map{|l| l.split(\"|\")}.flatten.map{|e| e.strip}.flatten\n#p [:docs,docs]\n"]], :>, [:main, ""], [:for, [:args, [:main, "doc in docs\n"]], :"rb<", [:args, [:main, "caseVar,partList=doc.split(\"=\")\npartList,caseVar=caseVar,\"docs\" unless partList\ncaseVar.strip!\npartList.strip!\n#split on the first \":\"\ndocTmpl,*partList=partList.split(\":\").map{|e| e.strip}\npartList=partList.join(\":\").strip\n#puts caseVar;puts docTmpl;puts partList\n"]], :>, [:named, ":{caseVar}", [:main, ":{partList}"]], :<<, [:main, ":{docTmpl}\n"]], [:main, "\n"]], [:main, ""]], [:main, "\n\nVersion without #for but directly with ruby for and block code! \n"], [:def, [:args, [:main, "Compose"]], :",", [:named, "list"], :"rb<", [:args, [:main, "docs=\#{=list}.split(\"\\n\").map{|l| l.split(\"|\")}.flatten.map{|e| e.strip}.flatten\n#Dyndoc.warn [:docs_in_compose,docs]\n"]], :"rb>", [:main, "\nfor doc in docs do\n  caseVar,partList=doc.split(\"=\")\n  partList,caseVar=caseVar,\"docs\" unless partList\n  caseVar.strip!\n  partList.strip!\n#split on the first \":\"\n  docTmpl,*partList=partList.split(\":\").map{|e| e.strip}\n  partList=partList.join(\":\").strip\n#Dyndoc.warn \"caseVar\",[caseVar,docTmpl,partList]\n  "], [:>, "[#>]:{caseVar}[:{partList}][#<<]:{docTmpl}"], [:main, "\nend\n"]], [:main, "\n"]]]
blckname
[nil, [:blck, :"rb<", [:args, [:main, "\n  $rfig=0\n  $rfig_exts={:png=>\".png\",:jpeg =>\".jpg\",:pdf=>\".pdf\"}\n"]], :<, [:main, "\n\n  "], [:def, [:args, [:main, "rfig"]], :",", [:named, "rcode"], :",", [:named, "img"], :",", [:named, "deviceR", [:main, "png"]], :",", [:named, "widthR", [:main, "10"]], :",", [:named, "heightR", [:main, "10"]], :",", [:named, "unitR", [:main, "cm"]], :",", [:named, "resR", [:main, "128"]], :",", [:named, "optR"], :",", [:named, "include", [:main, "true"]], :",", [:named, "optTex", [:main, "scale=0.75"]], :",", [:named, "newR", [:main, "FALSE"]], :",", [:named, "Renvir", [:main, "Global"]], :"?", [:args, [:main, ""], [:call, [:args, [:main, "dyndoc_mode"]]], [:main, " == :web"]], :"rb<", [:args, [:main, "p \"ici\""]], :"rb<", [:args, [:main, "p \"rfig web:\"+\#{=img}\n    "]], :<, [:main, ""], [:if, [:args, [:main, "\#{0?img}"]], [:blck, :"=", [:named, "img", [:main, "public:rfig"]]]], [:main, "\n    "], [:if, [:args, [:main, "\#{=img}[0...7]==\"public:\" "]], [:blck, :"rb<", [:args, [:main, "p \"ii22\"; imgName= \#{=img}[7..-1]; p imgName\n    "]], :"=", [:named, "img", [:main, ""], [:call, [:args, [:main, "cqlsweb_auto_img"]], [:main, ":{imgName}"]], [:main, ""]]]], [:main, "\n    "], [:if, [:args, [:main, ":r{capabilities()[\"aqua\"]}"]], [:blck, :"=", [:named, "optR", [:main, "type=\"quartz\""]]]], [:main, "\n    "], :"rb<", [:args, [:main, "p \"rfig web:\"+\#{=img}\n  "]], :"?", [:args, [:main, "else"]], :<, [:main, "\n    "], [:if, [:args, [:main, "\#{0?img}"]], [:blck, :"=", [:named, "img", [:main, ":{File.join($dyn_rsrc,\"img\",\"rfig_:{$rfig+=1}:{$rfig_exts[:\#{deviceR}]}\")}"]]], :else, [:blck, :<, [:main, "\n      "], [:if, [:args, [:main, "File.dirname(\#{=img})==\".\""]], [:blck, :>, [:named, "img", [:main, ":{File.join($dyn_rsrc,\"img\",\#{=img})}"]]]], [:main, "\n    "]]], [:main, "\n  "], :"?", [:args, [:main, "end\n  "]], :<, [:main, ""], [:if, [:args, [:main, "File.basename(\#{=img},\".*\")==File.basename(\#{=img})"]], [:blck, :>, [:named, "img", [:main, "\#{img}:{$rfig_exts[:\#{deviceR}]}"]]]], [:main, "\n  "], :"rb<", [:args, [:main, "\n    require 'fileutils'\n    imgdir=File.expand_path(File.dirname(\#{=img}))\n    FileUtils.mkdir_p(imgdir) unless File.exists? imgdir\n    rcode=\#{=rcode}.strip\n    Utils.clean_eol(rcode)\n  "]], :"rb>", [:named, "img", [:main, "File.expand_path(\#{=img})"]], :<, [:main, ""], [:r, [:main, "\n    if(\#{newR} || !file.exists('\#{img}')) {\n      \#{deviceR}('\#{img}',width=\#{widthR},height=\#{heightR}"], [:if, [:args, [:main, "\#{+?unitR}"]], [:blck, :>, [:main, ",units=\"\#{unitR}\""]]], [:main, ""], [:if, [:args, [:main, "\#{+?resR}"]], [:blck, :>, [:main, ",res=\#{resR}"]]], [:main, " "], [:if, [:args, [:main, "\#{+?optR}"]], [:blck, :>, [:main, ","]]], [:main, "\#{optR})\n      :{rcode}\n      dev.off()\n    }"], :in, [:main, "\#{Renvir}"]], [:main, "\n  "], :"?", [:args, [:main, " \#{include} "]], :>, [:main, ""], [:if, [:args, [:main, ""], [:call, [:args, [:main, "dyndoc_mode"]]], [:main, " == :web"]], [:blck, :>, [:main, ""], [:if, [:args, [:main, "(File.exists? \#{=img}) and (File.stat(\#{=img}).size>0)"]], [:blck, :>, [:main, "<img src=\""], [:call, [:args, [:main, "cqlsweb_public_imgName"]], [:main, "\#{img}"]], [:main, "\" alt=\"rfig\"/>"]], :else, [:blck, :out, [:main, "<p>Error in the following figure R code!</p><code><pre>:{rcode}</pre></code>"]]], [:main, ""]], :else, [:blck, :out, [:main, "\\includegraphics[\#{optTex}]{\#{img}}"]]], [:main, "\n  "]], [:main, "\n\n  "], [:hide, [:main, " WITH SHORTHANDOFF\n  "], [:def, [:args, [:main, "rfig"]], :",", [:named, "rcode"], :",", [:named, "img"], :",", [:named, "deviceR", [:main, "png"]], :",", [:named, "widthR", [:main, "10"]], :",", [:named, "heightR", [:main, "10"]], :",", [:named, "unitR", [:main, "cm"]], :",", [:named, "resR", [:main, "128"]], :",", [:named, "optR"], :",", [:named, "include", [:main, "true"]], :",", [:named, "optTex", [:main, "scale=0.75"]], :",", [:named, "newR", [:main, "FALSE"]], :",", [:named, "Renvir", [:main, "Global"]], :"?", [:args, [:main, ""], [:call, [:args, [:main, "dyndoc_mode"]]], [:main, " == :web"]], :"rb<", [:args, [:main, "p \"ici\""]], :"rb<", [:args, [:main, "p \"rfig web:\"+\#{=img}\n    "]], :<, [:main, ""], [:if, [:args, [:main, "\#{0?img}"]], [:blck, :"=", [:named, "img", [:main, "public:rfig"]]]], [:main, "\n    "], [:if, [:args, [:main, "\#{=img}[0...7]==\"public:\" "]], [:blck, :"rb<", [:args, [:main, "p \"ii22\"; imgName= \#{=img}[7..-1]; p imgName\n    "]], :"=", [:named, "img", [:main, ""], [:call, [:args, [:main, "cqlsweb_auto_img"]], [:main, ":{imgName}"]], [:main, ""]]]], [:main, "\n    "], [:if, [:args, [:main, ":r{capabilities()[\"aqua\"]}"]], [:blck, :"=", [:named, "optR", [:main, "type=\"quartz\""]]]], [:main, "\n    "], :"rb<", [:args, [:main, "p \"rfig web:\"+\#{=img}\n  "]], :"?", [:args, [:main, "else"]], :<, [:main, "\n    "], [:if, [:args, [:main, "\#{0?img}"]], [:blck, :"=", [:named, "img", [:main, ":{File.join($dyn_rsrc,\"img\",\"rfig_:{$rfig+=1}:{$rfig_exts[:\#{deviceR}]}\")}"]]], :else, [:blck, :<, [:main, "\n      "], [:if, [:args, [:main, "File.dirname(\#{=img})==\".\""]], [:blck, :>, [:named, "img", [:main, ":{File.join($dyn_rsrc,\"img\",\#{=img})}"]]]], [:main, "\n    "]]], [:main, "\n  "], :"?", [:args, [:main, "end\n  "]], :<, [:main, ""], [:if, [:args, [:main, "File.basename(\#{=img},\".*\")==File.basename(\#{=img})"]], [:blck, :>, [:named, "img", [:main, "\#{img}:{$rfig_exts[:\#{deviceR}]}"]]]], [:main, "\n  "], :"rb<", [:args, [:main, "\n    require 'fileutils'\n    imgdir=File.expand_path(File.dirname(\#{=img}))\n    FileUtils.mkdir_p(imgdir) unless File.exists? imgdir\n    rcode=\#{=rcode}.strip\n    Utils.clean_eol(rcode)\n  "]], :"rb>", [:named, "img", [:main, "File.expand_path(\#{=img})"]], :%, [:main, "Very bad trip about (french) babel package and : (caractÃ¨re actif latex) solved by \\shorthandoff{:}\n  "], :"?", [:args, [:main, "RUBY_PLATFORM =~ /mingw/ and (\#{=_USEPACKAGE_} =~ /[^\\[\\]]*\\[[^\\[\\]]*french[^\\[\\]]*\\]\\{babel\\}/) and \#{=img}.include? \":\""]], :"=", [:named, "shorthandoff", [:main, ":ok"]], :"?", [:args, [:main, "end\n  "]], :<, [:main, ""], [:r, [:main, "\n    if(\#{newR} || !file.exists('\#{img}')) {\n      \#{deviceR}('\#{img}',width=\#{widthR},height=\#{heightR}"], [:if, [:args, [:main, "\#{+?unitR}"]], [:blck, :>, [:main, ",units=\"\#{unitR}\""]]], [:main, ""], [:if, [:args, [:main, "\#{+?resR}"]], [:blck, :>, [:main, ",res=\#{resR}"]]], [:main, " "], [:if, [:args, [:main, "\#{+?optR}"]], [:blck, :>, [:main, ","]]], [:main, "\#{optR})\n      :{rcode}\n      dev.off()\n    }"], :in, [:main, "\#{Renvir}"]], [:main, "\n  "], :"?", [:args, [:main, " \#{include} "]], :>, [:main, ""], [:if, [:args, [:main, ""], [:call, [:args, [:main, "dyndoc_mode"]]], [:main, " == :web"]], [:blck, :>, [:main, ""], [:if, [:args, [:main, "(File.exists? \#{=img}) and (File.stat(\#{=img}).size>0)"]], [:blck, :>, [:main, "<img src=\""], [:call, [:args, [:main, "cqlsweb_public_imgName"]], [:main, "\#{img}"]], [:main, "\" alt=\"rfig\"/>"]], :else, [:blck, :out, [:main, "<p>Error in the following figure R code!</p><code><pre>:{rcode}</pre></code>"]]], [:main, ""]], :else, [:blck, :out, [:main, ""], [:if, [:args, [:main, "\#{shorthandoff}==:ok"]], [:blck, :>, [:main, "{\\shorthandoff{:}"]]], [:main, "\\includegraphics[\#{optTex}]{\#{img}}"], [:if, [:args, [:main, "\#{shorthandoff}==:ok"]], [:blck, :>, [:main, "}"]]], [:main, ""]]], [:main, "\n  "]], [:main, " "]], [:main, "\n\n\n  "], [:def, [:args, [:main, "rpng"]], :",", [:named, "rcode"], :",", [:named, "img"], :",", [:named, "widthR", [:main, "15"]], :",", [:named, "heightR", [:main, "15"]], :",", [:named, "unitR", [:main, "cm"]], :",", [:named, "resR", [:main, "72"]], :",", [:named, "optR"], :",", [:named, "include", [:main, "true"]], :",", [:named, "optTex", [:main, "scale=0.75"]], :",", [:named, "newR", [:main, "FALSE"]], :>, [:main, ""], [:call, [:args, [:main, "rfig"]], [:main, "\#{rcode}"], :",", [:named, "deviceR", [:main, "png"]]], [:main, ""]], [:main, "\n\n  "], [:def, [:args, [:main, "img"]], :",", [:named, "rcode"], :",", [:named, "img"], :",", [:named, "widthR", [:main, "15"]], :",", [:named, "heightR", [:main, "15"]], :",", [:named, "unitR", [:main, "cm"]], :",", [:named, "resR", [:main, "72"]], :",", [:named, "optR"], :",", [:named, "optTex", [:main, "scale=0.75"]], :",", [:named, "newR", [:main, "TRUE"]], :"=", [:named, "delete", [:main, "FALSE"]], :"?", [:args, [:main, "Dyndoc.tmpl_mngr.fmtOutput == \"tex\""]], :<, [:main, "\n    "], [:if, [:args, [:main, "\#{0?img}"]], [:blck, :"=", [:named, "img", [:main, ":{File.join($dyn_rsrc,\"img\",\"rfig_:{$rfig+=1}:{$rfig_exts[:png]}\")}"]]], :else, [:blck, :<, [:main, "\n      "], [:if, [:args, [:main, "File.dirname(\#{=img})==\".\""]], [:blck, :>, [:named, "img", [:main, ":{File.join($dyn_rsrc,\"img\",\#{=img})}"]]]], [:main, "\n    "]]], [:main, "\n  "], :"?", [:args, [:main, "Dyndoc.tmpl_mngr.fmtOutput == \"html\""]], :<, [:main, "\n    "], [:if, [:args, [:main, "\#{0?img}"]], [:blck, :"=", [:named, "img", [:main, "#r{tempfile(fileext=\".png\")}"]], :"=", [:named, "delete", [:main, "TRUE"]]]], [:main, "\n  "], :"?", [:args, [:main, "\#{+?rcode}"]], :<, [:main, ""], [:call, [:args, [:main, "rpng"]], [:main, "\#{rcode}"]], [:main, ""], :"?", [:args, [:main, "end\n  "]], :"R<", [:args, [:main, "require(base64)\n  #print(\#{=img})\n  codeimg<-img(\#{=img})\n  #print(codeimg)\n  if(\#{delete}) unlink(\#{=img})\n  "]], :"?", [:args, [:main, "Dyndoc.tmpl_mngr.fmtOutput == \"html\"\n  "]], :>, [:main, "#r{codeimg}"], :"?", [:args, [:main, "Dyndoc.tmpl_mngr.fmtOutput == \"tex\"\n  "]], :>, [:main, "\\includegraphics[\#{optTex}]{\#{img}}"]], [:main, "\n\n\n\n\n  "], [:def, [:args, [:main, "rjpeg"]], :",", [:named, "rcode"], :",", [:named, "img"], :",", [:named, "widthR", [:main, "10"]], :",", [:named, "heightR", [:main, "10"]], :",", [:named, "unitR", [:main, "cm"]], :",", [:named, "resR", [:main, "72"]], :",", [:named, "optR"], :",", [:named, "include", [:main, "true"]], :",", [:named, "optTex", [:main, "scale=0.75"]], :",", [:named, "newR", [:main, "FALSE"]], :>, [:main, ""], [:call, [:args, [:main, "rfig"]], [:main, "\#{rcode}"], :",", [:named, "deviceR", [:main, "jpeg"]]], [:main, ""]], [:main, "\n  \n  "], [:def, [:args, [:main, "rpdf"]], :",", [:named, "rcode"], :",", [:named, "img"], :",", [:named, "widthR", [:main, "5"]], :",", [:named, "heightR", [:main, "5"]], :",", [:named, "optR"], :",", [:named, "include", [:main, "true"]], :",", [:named, "optTex", [:main, "scale=1.0"]], :",", [:named, "newR", [:main, "FALSE"]], :>, [:main, ""], [:call, [:args, [:main, "rfig"]], [:main, "\#{rcode}"], :",", [:named, "deviceR", [:main, "pdf"]], :",", [:named, "unitR"], :",", [:named, "resR"]], [:main, ""]], [:main, "\n\n  "], [:def, [:args, [:main, "rsvg"]], :",", [:named, "rcode"], :",", [:named, "img"], :",", [:named, "widthR", [:main, "5"]], :",", [:named, "heightR", [:main, "5"]], :",", [:named, "pointsizeR", [:main, "12"]], :",", [:named, "optR"], :",", [:named, "Renvir", [:main, "Global"]], :"rb<", [:args, [:main, "\n    require 'fileutils'\n    imgdir=File.expand_path(\"~/dyndoc/tmp\")\n    FileUtils.mkdir_p(imgdir) unless File.exists? imgdir\n    rcode=\#{=rcode}.strip\n    Utils.clean_eol(rcode)\n    img=File.join(imgdir,\"last.svg\")\n    Dyndoc.warn \"img\",img\n  "]], :<, [:main, ""], [:r, [:main, "\n    svg(:{=img},width=\#{widthR},height=\#{heightR}"], [:if, [:args, [:main, "\#{+?pointsizeR}"]], [:blck, :>, [:main, ",pointsize=\"\#{pointsizeR}\""]]], [:main, ""], [:if, [:args, [:main, "\#{+?optR}"]], [:blck, :>, [:main, ","]]], [:main, "\#{optR})\n    :{rcode}\n    dev.off()\n  "], :in, [:main, "\#{Renvir}"]], [:main, "\n  "], :"rb<", [:args, [:main, "p [:rsvg,img,File.readlines(img).join(\"\\n\")]\n  "]], :"rb>", [:main, "File.readlines(img)[1..-1].join(\"\\n\") #everything except first line\n  "]], [:main, "\n"]]]
blckname
[nil, [:blck, :out, [:main, ""], [:def, [:args, [:main, "xtable"]], :",", [:named, "rexpr"], :",", [:named, "_xtable_opt"], :",", [:named, "_print_opt"], :"?", [:args, [:main, "\#{+?_xtable_opt}"]], :>, [:named, "_xtable_opt", [:main, ",\#{_xtable_opt}"]], :"?", [:args, [:main, "end\n"]], :"?", [:args, [:main, "\#{+?_print_opt}"]], :>, [:named, "_print_opt", [:main, ",\#{_print_opt}"]], :"?", [:args, [:main, "end\n"]], :"r>", [:main, "require(xtable)\nprint(xtable({\#{rexpr}}\#{_xtable_opt})\#{_print_opt})"]], [:main, "\n\n"], [:def, [:args, [:main, "rpart"]], :",", [:named, "part"], :",", [:named, "saved"], :"rb<", [:args, [:main, "CqlsDoc.make_dir(\"part\")\n"]], :>, [:named, "rdata", [:main, "part/\#{part}.RData"]], :tag, [:main, "rpart:\#{part}"], :yield, [:main, "default\n"], :"r<", [:args, [:main, "save(\#{saved},file=\"\#{rdata}\")\n"]], :tag, [:main, "else"], :"r<", [:args, [:main, "\n"]], :"?", [:args, [:main, "File.exist?(\#{=rdata}) "]], :"r<", [:args, [:main, "load(\"\#{rdata}\")\n"]], :"?", [:args, [:main, "else"]], :yield, [:main, "default \n"], :"r<", [:args, [:main, "save(\#{saved},file=\"\#{rdata}\")\n"]]], [:main, "\n\n"], [:def, [:args, [:main, "sweave"]], :",", [:named, "rcode"], :"rb>", [:named, "rcode", [:main, "\#{=rcode}.strip.gsub(\"\\r\\n\",\"\\n\")"]], :>, [:main, "\\begin{CodeChunk}<\\n>"], :"rb>", [:main, "res=CqlsDoc::RServer.echo_blocks(\#{=rcode})\n  i,res2=0,[[],[]]\n  while i<res[:in].length\n    input=\"R\"+res[:in][i]\n    while res[:out][i].empty?\n      i+=1\n      input<<(res[:in][i][0,1]==\"+\" ? \" \" : \"R\") << res[:in][i]\n    end\n    res2[0]<<\"\\\\begin{CodeInput}\\n\"+input+\"\\\\end{CodeInput}\"\n    res2[1]<<\"\\\\begin{CodeOutput}\\n\"+res[:out][i]+\"\\\\end{CodeOutput}\"\n    i+=1\n  end\n  (0...(res2[0].length)).map{|i| res2[0][i]+\"\\n\"+res2[1][i]+\"\\n\"}.join\n  "], :>, [:main, "\\end{CodeChunk}"]], [:main, "\n\n"], [:def, [:args, [:main, "supeR"]], :",", [:named, "rcode"], :",", [:named, "_optLst"], :"?", [:args, [:main, "!$dyn_supeR"]], :"rb<", [:args, [:main, "$dyn_supeR=0 \n"]], :<, [:main, ""], [:document, :package, [:blck, :out, [:main, "\n\\RequirePackage{listings}\n\\RequirePackage{xcolor} \n"]]], [:main, ""], :"?", [:args, [:main, "end\n"]], :"rb<", [:args, [:main, "res=CqlsDoc::RServer.inputsAndOutputs(\#{=rcode}.strip,$dyn_supeR+=1)\nheader={\"keywordstyle\"=>'\\bf\\color{green}',\n\"stringstyle\"=>'\\color{red}',\n\"showstringspaces\"=>true,\n\"numbers\"=>\"left\",\n\"numberstyle\"=>'\\tiny\\bf',\n\"stepnumber\"=>1,\n\"frame\"=>\"l\"\n}\nheader2=@vars.extract(\"_optLst\")\nheader.merge!(header2) if header2 and header2.is_a? Hash\nheader=header.map{|k,v| k+\"=\"+v.to_s}.join(\",\")\n"]], :>, [:main, "\\begin{lstlisting}[language=R,name=algoR:{$dyn_supeR},:{header}]\n"], [:for, [:args, [:main, "line in res\n"]], :"rb>", [:main, "(case line[:prompt];when :normal;\">\";when :continue;\"+\";when :none;\"\";end)"], :>, [:main, " :{line[:input]}"], :"?", [:args, [:main, "!line[:output].empty?"]], :>, [:main, ":{line[:output]}"], :"?", [:args, [:main, "line[:img] and !(line[:img][:opt] and line[:img][:opt][\"include\"] and line[:img][:opt][\"include\"]==\"ok\")"]], :>, [:main, "\\end{lstlisting}\n"], :>, [:main, "\\includegraphics{:{line[:img][:name]}}\n\\begin{lstlisting}[language=R,firstnumber=auto,name=algoR:{$dyn_supeR},:{header}]<\\n>"]], [:main, "\\end{lstlisting}"]], [:main, "\n\n\n"], [:def, [:args, [:main, "peteR"]], :",", [:named, "rcode"], :",", [:named, "_optLst"], :"?", [:args, [:main, "!$dyn_supeR"]], :"rb<", [:args, [:main, "$dyn_supeR=0 \n"]], :<, [:main, ""], [:document, :package, [:blck, :out, [:main, "\n\\RequirePackage{fancyvrb}\n\\RequirePackage{xcolor} \n\\definecolor{beaubleu}{rgb}{0.26,0.31,0.61}\n"]]], [:main, ""], :"?", [:args, [:main, "end\n"]], :"rb<", [:args, [:main, "\nres=CqlsDoc::RServer.inputsAndOutputs(\#{=rcode}.strip.gsub(\"\\r\\n\",\"\\n\"),$dyn_supeR+=1)\nheader={\"formatcom\"=>'\\color{beaubleu}',\"fontfamily\"=>\"courier\"\n}\nheader2=@vars.extract(\"_optLst\")\nheader.merge!(header2) if header2 and header2.is_a? Hash\nheader=header.map{|k,v| k+\"=\"+v.to_s}.join(\",\")\n"]], :>, [:main, "\\begin{Verbatim}[:{header}]\n"], [:for, [:args, [:main, "line in res\n"]], :"rb<", [:args, [:main, "[(line[:prompt]==:normal ? \">\" : \"+\")]\n"]], :"rb>", [:main, "(case line[:prompt];when :normal;\">\";when :continue;\"+\";when :none;\"\";end)"], :>, [:main, " :{line[:input]}"], :"?", [:args, [:main, "!line[:output].empty?"]], :>, [:main, ":{line[:output]}"], :"?", [:args, [:main, "line[:img] and !(line[:img][:opt] and line[:img][:opt][\"include\"] and line[:img][:opt][\"include\"]==\"ok\")"]], :>, [:main, "\\end{Verbatim}\n"], :>, [:main, "\\includegraphics{:{line[:img][:name]}}\n\\begin{Verbatim}[:{header}]<\\n>"]], [:main, "\\end{Verbatim}"]], [:main, "\n\n"], [:def, [:args, [:main, "peteR"]], :",", [:named, "rcode"], :>, [:main, ""], [:call, [:args, [:main, "Rems"]], [:main, "\#{rcode}"]], [:main, ""]], [:main, "\n\n"], [:def, [:args, [:main, "RVerb"]], :",", [:named, "rcode"], :>, [:main, ""], [:call, [:args, [:main, "Rems"]], [:main, "\#{rcode}"]], [:main, ""]], [:main, "\n\n"], [:def, [:args, [:main, "Rems_in"]], :"?", [:args, [:main, "!line[:input].empty?"]], :>, [:main, " \\textcolor{beaubleu}{:{line[:input].chomp.gsub(/\\'\\\\t\\'/,\"'{\\\\textbackslash}t'\").gsub(/\\\"\\\\t\\\"/,\"\\\"{\\\\textbackslash}t\\\"\")}}<\\n>"]], [:main, "\n\n"], [:def, [:args, [:main, "Rems_out"]], :"rb>", [:main, "line[:output].split(\"\\n\").map{|l| '\\textit{\\textcolor{beauvert}{'+l+\"}}\"}.join(\"\\n\")+\"\\n\""]], [:main, "\n\n\n"], [:def, [:args, [:main, "Rems_content"]], :"rb<", [:args, [:main, "[(line[:prompt]==:normal ? \">\" : \"+\")]\n"]], :"rb>", [:main, "(case line[:prompt];when :normal;\">\";when :continue;\"+\";when :none;\"\";end)"], :"rb<", [:args, [:main, "#p line[:img] if line[:img]\n"]], :>, [:main, ""], [:call, [:args, [:main, "Rems_in"]]], [:main, ""], :"?", [:args, [:main, "!line[:output].empty?"]], :>, [:main, ""], [:call, [:args, [:main, "Rems_out"]]], [:main, ""]], [:main, "\n\n"], [:def, [:args, [:main, "Rems"]], :",", [:named, "rcode"], :",", [:named, "_optLst"], :",", [:named, "RDevice", [:main, "<<type[pdf]<<opt[width=5,height=5,onefile=FALSE]"]], :",", [:named, "graph", [:main, "<<before[]<<after[]"]], :"?", [:args, [:main, "!$dyn_supeR"]], :"rb<", [:args, [:main, "$dyn_supeR=0 \n"]], :<, [:main, ""], [:document, :package, [:blck, :out, [:main, "\n%\\RequirePackage{fancyvrb}\n\\usepackage{xcolor}\n"]], :preamble, [:blck, :out, [:main, "\n\\definecolor{beaubleu}{rgb}{0.26,0.31,0.61}\n\\definecolor{beauvert}{rgb}{0.27,0.52,0.42}\n"]]], [:main, ""], :"?", [:args, [:main, "end\n"]], :"rb<", [:args, [:main, "\nRServer.device(\#{=RDevice.type})\n##Dyndoc.warn \#{=rcode}.encoding\nres=CqlsDoc::RServer.inputsAndOutputs(\#{=rcode}.strip.gsub(\"\\r\\n\",\"\\n\"),$dyn_supeR+=1,\#{=RDevice.opt})\n#Dyndoc.warn \"res_in_Rems\",res\nheader={\"fontfamily\"=>\"courier\",\"fontseries\"=>\"b\",\"fontsize\"=>\"\\\\small\"}\nheader2=@vars.extract(\"_optLst\")\nheader.merge!(header2) if header2 and header2.is_a? Hash\nheader=header.map{|k,v| k+\"=\"+v.to_s}.join(\",\")\n"]], :>, [:main, "\\begin{Verbatim}[commandchars=\\\\\\{\\},:{header}]<\\n>"], :"rb<", [:args, [:main, "openVerb=true\n"]], :>, [:main, ""], [:for, [:args, [:main, "i in 0...(res.length)"]], :"rb<", [:args, [:main, "line=res[i]\n"]], :>, [:main, ""], [:call, [:args, [:main, "Rems_content"]]], [:main, ""], :"?", [:args, [:main, "line[:img] and !(line[:img][:opt] and line[:img][:opt][\"include\"] and line[:img][:opt][\"include\"].downcase==\"no\")"]], :>, [:main, "\\end{Verbatim}<\\n>"], :"rb<", [:args, [:main, "openVerb=false\n"]], :>, [:main, "\#{graph.before}\\begin{center}\\includegraphics"], [:if, [:args, [:main, "line[:img][:opt] and line[:img][:opt][\"opt\"]"]], [:blck, :>, [:main, "[:{line[:img][:opt][\"opt\"]}]"]]], [:main, "{:{line[:img][:name]}}\\end{center}\#{graph.after}<\\n>"], :"?", [:args, [:main, " & (i < (res.length-1))"]], :>, [:main, "\\begin{Verbatim}[commandchars=\\\\\\{\\},:{header}]<\\n>"], :"rb<", [:args, [:main, "openVerb=true\n"]]], [:main, ""], :"?", [:args, [:main, "openVerb"]], :>, [:main, "\\end{Verbatim}\n"]], [:main, "\n\n"], [:def, [:args, [:main, "verbR_init"]], :",", [:named, "optIn"], :",", [:named, "optOut"], :",", [:named, "verbIn", [:main, "Verbatim"]], :",", [:named, "verbOut", [:main, "Verbatim"]], :"?", [:args, [:main, "!$dyn_verbR"]], :"rb<", [:args, [:main, "$dyn_verbR=0"]], :"?", [:args, [:main, "end\n"]], :"=", [:named, "::verbR.verbIn", [:main, "\#{verbIn}"]], :"=", [:named, "::verbR.verbOut", [:main, "\#{verbOut}"]], :<, [:main, ""], [:case, [:args, [:main, "\#{verbIn}\n"]], :when, [:args, [:main, "listings,lst"]], [:blck, :>, [:named, "packageIn", [:main, "\\RequirePackage{listings}\n\\usepackage{xcolor}"]], :"rb<", [:args, [:main, "\nheaderIn={\"language\"=>\"R\",\n\"keywordstyle\"=>'\\bf\\color{green}',\n\"stringstyle\"=>'\\color{red}',\n\"showstringspaces\"=>true,\n\"numbers\"=>\"left\",\n\"numberstyle\"=>'\\tiny\\bf',\n\"stepnumber\"=>1,\n\"frame\"=>\"l\"\n}\n"]]], :when, [:args, [:main, "Verbatim"]], [:blck, :>, [:named, "packageIn", [:main, "\\RequirePackage{fancyvrb}\\RequirePackage{xcolor}"]], :"rb<", [:args, [:main, "\nheaderIn={\"formatcom\"=>'\\color{green}',\"fontfamily\"=>\"courier\",\"fontseries\"=>\"b\"\n}\n"]]]], [:main, "\n"], [:case, [:args, [:main, "\#{verbOut}\n"]], :when, [:args, [:main, "listings,lst"]], [:blck, :>, [:named, "packageOut", [:main, "\\RequirePackage{listings}\n\\RequirePackage{xcolor}"]], :"rb<", [:args, [:main, "\nheaderOut={\"language\"=>\"R\",\n\"keywordstyle\"=>'\\bf\\color{green}',\n\"stringstyle\"=>'\\color{red}',\n\"showstringspaces\"=>true,\n\"numbers\"=>\"right\",\n\"numberstyle\"=>'\\tiny\\bf',\n\"stepnumber\"=>1,\n\"frame\"=>\"l\"\n}\n"]]], :when, [:args, [:main, "Verbatim"]], [:blck, :>, [:named, "packageOut", [:main, "\\RequirePackage{fancyvrb}\\RequirePackage{xcolor}"]], :"rb<", [:args, [:main, "\nheaderOut={\"formatcom\"=>'\\color{red}',\"fontfamily\"=>\"courier\",\"fontseries\"=>\"b\"\n}\n"]]]], [:main, "\n"], :<, [:main, ""], [:document, :package, [:blck, :out, [:main, "\n\#{packageIn}\n\#{packageOut}\n"]]], [:main, "\n"], :"rb<", [:args, [:main, "\nheader2=@vars.extract(\"optIn\")\nheaderIn.merge!(header2) if header2 and header2.is_a? Hash\nheaderIn=headerIn.map{|k,v| k+\"=\"+v.to_s}.join(\",\")\nheader2=@vars.extract(\"optOut\")\nheaderOut.merge!(header2) if header2 and header2.is_a? Hash\nheaderOut=headerOut.map{|k,v| k+\"=\"+v.to_s}.join(\",\")\n"]]], [:main, "\n\n\n"], [:def, [:args, [:main, "verbR_init"]], :",", [:named, "optIn"], :",", [:named, "optOut"], :",", [:named, "verbIn", [:main, "Verbatim"]], :",", [:named, "verbOut", [:main, "Verbatim"]], :"?", [:args, [:main, "!$dyn_verbR"]], :"rb<", [:args, [:main, "$dyn_verbR=0"]], :"?", [:args, [:main, "end\n"]], :"=", [:named, "::verbR.verbIn", [:main, "\#{verbIn}"]], :"=", [:named, "::verbR.verbOut", [:main, "\#{verbOut}"]], :<, [:main, ""], [:case, [:args, [:main, "\#{verbIn}\n"]], :when, [:args, [:main, "listings,lst"]], [:blck, :>, [:named, "packageIn", [:main, "\\RequirePackage{listings}\n\\usepackage{xcolor}"]], :"rb<", [:args, [:main, "\nheaderIn={\"language\"=>\"R\",\n\"keywordstyle\"=>'\\bf\\color{green}',\n\"stringstyle\"=>'\\color{red}',\n\"showstringspaces\"=>true,\n\"numbers\"=>\"left\",\n\"numberstyle\"=>'\\tiny\\bf',\n\"stepnumber\"=>1,\n\"frame\"=>\"l\"\n}\n"]]], :when, [:args, [:main, "Verbatim"]], [:blck, :>, [:named, "packageIn", [:main, "\\RequirePackage{fancyvrb}\\RequirePackage{xcolor}"]], :"rb<", [:args, [:main, "\nheaderIn={\"formatcom\"=>'\\color{green}',\"fontfamily\"=>\"courier\",\"fontseries\"=>\"b\"\n}\n"]]]], [:main, "\n"], [:case, [:args, [:main, "\#{verbOut}\n"]], :when, [:args, [:main, "listings,lst"]], [:blck, :>, [:named, "packageOut", [:main, "\\RequirePackage{listings}\n\\RequirePackage{xcolor}"]], :"rb<", [:args, [:main, "\nheaderOut={\"language\"=>\"R\",\n\"keywordstyle\"=>'\\bf\\color{green}',\n\"stringstyle\"=>'\\color{red}',\n\"showstringspaces\"=>true,\n\"numbers\"=>\"right\",\n\"numberstyle\"=>'\\tiny\\bf',\n\"stepnumber\"=>1,\n\"frame\"=>\"l\"\n}\n"]]], :when, [:args, [:main, "Verbatim"]], [:blck, :>, [:named, "packageOut", [:main, "\\RequirePackage{fancyvrb}\\RequirePackage{xcolor}"]], :"rb<", [:args, [:main, "\nheaderOut={\"formatcom\"=>'\\color{red}',\"fontfamily\"=>\"courier\",\"fontseries\"=>\"b\"\n}\n"]]]], [:main, "\n"], :<, [:main, ""], [:document, :package, [:blck, :out, [:main, "\n\#{packageIn}\n\#{packageOut}\n"]]], [:main, "\n"], :"rb<", [:args, [:main, "\nheader2=@vars.extract(\"optIn\")\nheaderIn.merge!(header2) if header2 and header2.is_a? Hash\nheaderIn=headerIn.map{|k,v| k+\"=\"+v.to_s}.join(\",\")\nheader2=@vars.extract(\"optOut\")\nheaderOut.merge!(header2) if header2 and header2.is_a? Hash\nheaderOut=headerOut.map{|k,v| k+\"=\"+v.to_s}.join(\",\")\n"]]], [:main, "\n\n"], [:def, [:args, [:main, "verbR_header"]], :<, [:main, "\n"], [:case, [:args, [:main, "\#{verbR.verbIn}\n"]], :when, [:args, [:main, "listings,lst"]], [:blck, :"=", [:named, "::verbR.beginIn", [:main, "\\begin{lstlisting}[name=algoR:{$dyn_verbR},:{headerIn}]"]], :"=", [:named, "::verbR.endIn", [:main, "\\end{lstlisting}"]]], :when, [:args, [:main, "fancy,Verbatim"]], [:blck, :"=", [:named, "::verbR.beginIn", [:main, "\\begin{Verbatim}[:{headerIn}]"]], :"=", [:named, "::verbR.endIn", [:main, "\\end{Verbatim}"]]]], [:main, "\n"], [:case, [:args, [:main, "\#{verbR.verbOut}\n"]], :when, [:args, [:main, "listings,lst"]], [:blck, :"=", [:named, "::verbR.beginOut", [:main, "\\begin{lstlisting}[name=algoR:{$dyn_verbR},:{headerOut}]"]], :"=", [:named, "::verbR.endOut", [:main, "\\end{lstlisting}"]]], :when, [:args, [:main, "fancy,Verbatim"]], [:blck, :"=", [:named, "::verbR.beginOut", [:main, "\\vspace*{-.5cm}\\begin{Verbatim}[:{headerOut}]"]], :"=", [:named, "::verbR.endOut", [:main, "\\end{Verbatim}"]]]], [:main, "\n"]], [:main, "\n\n"], [:def, [:args, [:main, "verbR"]], :",", [:named, "rcode"], :<, [:main, ""], [:call, [:args, [:main, "verbR_header"]]], [:main, "\n"], :"rb<", [:args, [:main, "res=CqlsDoc::RServer.inputsAndOutputs(\#{=rcode}.strip,$dyn_verbR+=1)\ncontIn=nil\n"]], :>, [:main, ""], [:for, [:args, [:main, "line in res"]], :"?", [:args, [:main, "!contIn"]], :>, [:main, "\#{verbR.beginIn}<\\n>"], :"?", [:args, [:main, "end\n"]], :"rb<", [:args, [:main, "[(line[:prompt]==:normal ? \">\" : \"+\")]\n"]], :"rb>", [:main, "(case line[:prompt];when :normal;\">\";when :continue;\"+\";when :none;\"\";end)"], :>, [:main, " :{line[:input]}"], :"?", [:args, [:main, "!(contIn=(line[:output].empty?))"]], :>, [:main, "\#{verbR.endIn}\n\#{verbR.beginOut}\n:{line[:output]}\n\#{verbR.endOut}\n"], :"?", [:args, [:main, "line[:img] and !(line[:img][:opt] and line[:img][:opt][\"include\"] and line[:img][:opt][\"include\"]==\"ok\")"]], :>, [:main, "\#{verbR.endIn}\n"], :>, [:main, "\\includegraphics{:{line[:img][:name]}}<\\n>\#{verbR.beginIn}"]], [:main, "\n"]], [:main, "\n\n"], [:def, [:args, [:main, "initScriptLstLang"]], :",", [:named, "langs", [:main, "R,C++,Fortran"]], :<, [:main, ""], [:document, :package, [:blck, :out, [:main, "\n\\usepackage[formats]{listings}\n\\usepackage{textcomp}\n\\usepackage{xcolor}\n"]], :preamble, [:blck, :out, [:main, "\\lstloadlanguages{\#{langs}}\n"]]], [:main, ""]], [:main, "\n\n\n"], [:hide, [:main, " CECI est rendu possible grace au escapeinside!\nplot(x,y) "], [:call, [:args, [:main, "lstEsc"]], [:main, "\\label{comment}"]], [:main, " #toto\n#comment\n"]], [:main, "\n"], [:def, [:args, [:main, "scriptR"]], :",", [:named, "rcode"], :",", [:named, "exec", [:main, "true"]], :>, [:main, "\n\\lstset{framexleftmargin=5mm, frame=shadowbox, rulesepcolor=\\color{gray}, escapeinside={\\#(*}{*)}, numberstyle=\\small, stepnumber=1, numbersep=5pt, keepspaces=true,language=R,name=R, showstringspaces=false,upquote=true,basicstyle=\\ttfamily}\n\\begin{lstlisting}[numbers=left]\n\#{rcode}\n\\end{lstlisting}\n"], :"?", [:args, [:main, "\#{exec}"]], :"r<", [:args, [:main, "\#{rcode}\n"]]], [:main, "\n\n"], [:def, [:args, [:main, "scriptCpp"]], :",", [:named, "code", [:main, "]["]], :>, [:main, "\n\\lstset{framexleftmargin=5mm, frame=shadowbox, rulesepcolor=\\color{gray}, escapeinside={\\#(*}{*)}, numberstyle=\\small, stepnumber=1, numbersep=5pt, keepspaces=true,language=C++,name=Cpp,showstringspaces=false}\n\\begin{lstlisting}[numbers=left]\n\#{code}\n\\end{lstlisting}\n"]], [:main, "\n\n"], [:def, [:args, [:main, "scriptFortran"]], :",", [:named, "code", [:main, "]["]], :>, [:main, "\n\\lstset{framexleftmargin=5mm, frame=shadowbox, rulesepcolor=\\color{gray}, escapeinside={\\#(*}{*)}, numberstyle=\\small, stepnumber=1, numbersep=5pt, keepspaces=true,language=Fortran,name=Fortran, showstringspaces=false}\n\\begin{lstlisting}[numbers=left]\n\#{code}\n\\end{lstlisting}\n"]], [:main, "\n\n"], [:def, [:args, [:main, "lstEsc"]], :",", [:named, "latex"], :>, [:main, "#(*\#{latex}*)"]], [:main, "\n\n"], [:def, [:args, [:main, "RWeb_in"]], :>, [:main, " \\textcolor{beaubleu}{:{line[:input].chomp.gsub(/\\'\\\\t\\'/,\"'{\\\\textbackslash}t'\").gsub(/\\\"\\\\t\\\"/,\"\\\"{\\\\textbackslash}t\\\"\")}}<\\n>"]], [:main, "\n\n"], [:def, [:args, [:main, "RWeb_out"]], :"rb>", [:main, "line[:output].split(\"\\n\").map{|l| '\\textit{\\textcolor{beauvert}{'+l+\"}}\"}.join(\"\\n\")+\"\\n\""]], [:main, "\n\n\n"], [:def, [:args, [:main, "RWeb_content"]], :"rb<", [:args, [:main, "[(line[:prompt]==:normal ? \">\" : \"+\")]\n"]], :"rb>", [:main, "(case line[:prompt];when :normal;\">\";when :continue;\"+\";when :none;\"\";end)"], :"rb<", [:args, [:main, "#p line[:img] if line[:img]\n"]], :>, [:main, ""], [:call, [:args, [:main, "RWeb_in"]]], [:main, ""], :"?", [:args, [:main, "!line[:output].empty?"]], :>, [:main, ""], [:call, [:args, [:main, "RWeb_out"]]], [:main, ""]], [:main, "\n\n"], [:def, [:args, [:main, "RWeb"]], :",", [:named, "rcode"], :",", [:named, "_optLst"], :",", [:named, "RDevice", [:main, "<<type[pdf]<<opt[width=5,height=5,onefile=FALSE]"]], :",", [:named, "graph", [:main, "<<before[]<<after[]"]], :"?", [:args, [:main, "!$dyn_supeR"]], :"rb<", [:args, [:main, "$dyn_supeR=0 \n"]], :"?", [:args, [:main, "end\n"]], :"rb<", [:args, [:main, "\nRServer.device(\#{=RDevice.type})\n#p \#{=rcode}\nres=CqlsDoc::RServer.inputsAndOutputs(\#{=rcode}.strip.gsub(\"\\r\\n\",\"\\n\"),$dyn_supeR+=1,\#{=RDevice.opt})\n#puts \"res\";p res\n"]], :>, [:main, "\\begin{Verbatim}[commandchars=\\\\\\{\\},:{header}]<\\n>"], :"rb<", [:args, [:main, "openVerb=true\n"]], :>, [:main, ""], [:for, [:args, [:main, "i in 0...(res.length)"]], :"rb<", [:args, [:main, "line=res[i]\n"]], :>, [:main, ""], [:call, [:args, [:main, "RWeb_content"]]], [:main, ""], :"?", [:args, [:main, "line[:img] and !(line[:img][:opt] and line[:img][:opt][\"include\"] and line[:img][:opt][\"include\"].downcase==\"no\")"]], :>, [:main, "\\end{Verbatim}<\\n>"], :"rb<", [:args, [:main, "openVerb=false\n"]], :>, [:main, "\#{graph.before}\\begin{center}\\includegraphics"], [:if, [:args, [:main, "line[:img][:opt] and line[:img][:opt][\"opt\"]"]], [:blck, :>, [:main, "[:{line[:img][:opt][\"opt\"]}]"]]], [:main, "{:{line[:img][:name]}}\\end{center}\#{graph.after}<\\n>"], :"?", [:args, [:main, " & (i < (res.length-1))"]], :>, [:main, "\\begin{Verbatim}[commandchars=\\\\\\{\\},:{header}]<\\n>"], :"rb<", [:args, [:main, "openVerb=true\n"]]], [:main, ""], :"?", [:args, [:main, "openVerb"]], :>, [:main, "\\end{Verbatim}\n"]], [:main, "\n"]]]
blckname
[nil, [:blck, :out, [:main, "\\usepackage{multirow}\n"]]]
blckname
[nil, [:blck, :out, [:main, "\n"], :%, [:main, "double indexed elements\nOn dÃ©finit les cellules comme des Ã©lÃ©ments #code (enregistrÃ©s dans des variables dyn) dÃ©pendant (ou pas) de 2 indices i et j (en ruby)!\nLes infos sont attachÃ©s dans un environnement R sous forme d'une matrice R avec pour Ã©lements les noms des cellules #code\n"], :<, [:main, ""], [:meth, [:args, [:main, "new.Tabular"]], :",", [:named, ".tabR", [:main, ".\#{.ObjectName}TabR"]], :",", [:named, ".hlines"], :",", [:named, ".vlines"], :"rb<", [:args, [:main, "@vars.extract_raw(\"self\")[:cells]={}\n"]]], [:main, "\n\n\nLES IDEES \nA) sur le contenu des cellules\n  1) crÃ©er une fonction dyn qui gÃ¨re le contenu en fonction des indices i,j\n  2) l'appeler dans les blocs reprÃ©sentant les cellules!\n  3) les cellules contenant du texte sont simplement recopiÃ©es tandis que les blocs sont executÃ©s\n    un bloc finit par \"!\" \nB) la mÃ©thode d'initialisation peut Ãªtre gÃ©nÃ©rique et non seulement applicable au tableau!\nC) gestion des multicol et multirow??? PLUS TARD!\n\n"], [:meth, [:args, [:main, "make.Tabular"]], :",", [:named, "mat"], :",", [:named, "transpose", [:main, "false"]], :"rb<", [:args, [:main, "\ncurRow=nil\nmat=[]\ncells={}\nmatxt=\#{=mat}.strip\n#Dyndoc.warn \"matxt\",matxt\n\n#create the matrix\nrows=matxt.split(\"\\\\\\\\\").map{|r| r.strip}\nrows.each{|r| #\n#p r\n  row=r.strip.split(\"&\",-1).map{|e| e.strip}\n#p [:row,row]\n  #first column -> maybe a preliminary variable to initialize! \n  while row[0] =~ /^(?:\\#|\\:)(var|row|col|rb|r)/\n    cmd=$1\n    pos=cmd.length+1\n    row[0]=row[0][pos..-1]\n    #separator\n    sep=\"|\"\n    if [\"var\",\"col\",\"row\"].include? cmd and row[0][0,1]==\"[\" and row[0][2,1]==\"]\"\n      sep=row[0][1,1]\n      row[0]=row[0][3..-1]\n    end\n    #code\n    o=row[0][0,1]\n    c={\"{\"=>\"}\",\"(\"=>\")\",\"<\"=>\">\",\"[\"=>\"]\"}[o]\n    c=o unless c\n    row[0] =~ /^\#{Regexp.escape(o)}([^\#{Regexp.escape(c)}]*)\#{Regexp.escape(c)}/m #the rule is clear: the closing character does not exists inside!\n#p /^\#{Regexp.escape(o)}([^\#{Regexp.escape(c)}]*)\#{Regexp.escape(c)}/m\n#puts \"ICI\";p row[0];p $1\n    code=$1\n    row[0]=row[0][(code.length+2)..-1].strip\n#p row[0]    \n    code.strip!\n    cells[mat.length+1]=[] unless cells[mat.length+1]\n    if [\"row\",\"col\"].include? cmd\n      code= cmd + \"=\" + code\n      cmd=\"var\"\n    end\n    cmd2=[cmd.to_sym,code]\n    cmd2 << sep if cmd==\"var\"\n    cells[mat.length+1] << cmd2\n  end\n#puts \"after\";p row\n  # and now the normal treatment!\n  if row[0][0,1]==\"%\"\n    #nothing to do\n  elsif row.length==1 and row[0][0,4]==\"row*\"\n    # repeat curRow the number of times!\n#p \"row*\";p row[0][4..-1].strip.to_i\n    1.upto(row[0][4..-1].strip.to_i) { mat << curRow }\n  elsif row.length==1 and row[0][0,4]==\"row(\" and row[0][-1,1]==\")\"\n    mat << (curRow=mat[row[0][4...-1].strip.to_i-1])\n  else\n    curCol=\"\"\n    resRow=[]  \n#p row\n    row.each{|col| #\n      if col[0,4]==\"col*\"\n        1.upto(col[4..-1].strip.to_i) { resRow << curCol }\n      elsif col[0,4]==\"col(\" and col[-1,1]==\")\"\n        resRow << (curCol=resRow[col[4...-1].strip.to_i-1])\n      elsif col =~ /^mcol\\{([^\\{]*)\\}(.*)$/m\n        nbCol=$1.strip.to_i-1\n        resRow << \"__MCOL__{\"+$1+\"}\"+$2\n        1.upto(nbCol) {resRow << (curCol=\"__MCOL__\") }\n        resRow[-1]+=\"&\"\n      elsif col =~ /^mrow(\\{[^\\{]*\\})(\\{[^\\{]*\\})(.*)$/m\n        rowCnt=$1+( $3.empty? ? \"{*}\"+$2 : $2+$3 ) \n        resRow << (curCol=\"\\\\multirow\"+rowCnt)\n      else\n        resRow << col \n      end\n      curCol=resRow[-1]\n    }\n#puts \"resRow\";p resRow\n    mat << resRow\n    curRow=mat[-1]\n  end\n}\n# dim(mat)\nnrow,ncol=mat.length,mat.map{|row| row.length}.max\n# same column number! complete otherwise\n#mat.map!{|row| ( row.length<ncol ? row+[\"\"]*(ncol-row.length) : (row[-1]==\"__MCOL__&\" ? row[0...-1]+[\"__MCOL__\"] : row ) ) }\nmat.map!{|row| \n  if row.length<ncol\n    row+[\"\"]*(ncol-row.length) \n  elsif row[-1]==\"__MCOL__&\"\n    #no __MCOL__& at the last position!\n    row[0...-1]+[\"__MCOL__\"] \n  else \n    row\n  end\n}\n#p mat\n#Dyndoc.warn \"make:cells\",cells\n@vars.extract_raw(\"self\")[:cells]=cells\n#p @vars.extract_raw(\"self\")\n\#@vars[\"self\"][:cells]=cells\n"]], :%, [:main, "put it in R! LÃ , c'est magic! Le job est fait sans itÃ©ration!\n"], :"r<", [:args, [:main, "\#{.tabR}<-matrix(:{=mat.flatten},nr=:{nrow},nc=:{ncol},byrow=TRUE)\n"]], :yield, [:main, "default\n"], :"?", [:args, [:main, "\#{transpose}"]], :"r<", [:args, [:main, "\#{tabR}<-t(\#{.tabR})"]], :"?", [:args, [:main, "end\n"]], :<, [:main, ""], [:call, [:args, [:main, "init"]], [:main, "self"]], [:main, "\n"]], [:main, "\n\n\n\nOnce the tabular is created! initialize it by specifying .vlines and .hlines!\n\n"], [:meth, [:args, [:main, "init.Tabular"]], :",", [:named, "hlines", [:main, "auto"]], :",", [:named, "vlines", [:main, "auto"]], :"=", [:named, ".imax", [:main, ":r{nrow(\#{.tabR})}"]], :"=", [:named, ".jmax", [:main, ":r{ncol(\#{.tabR})}"]], :"?", [:args, [:main, "\#{=vlines}==\"auto\""]], :"=", [:named, ".vlines", [:main, "|:{\"c|\"*\#{.jmax}}"]], :"?", [:args, [:main, "else"]], :"=", [:named, ".vlines", [:main, "\#{vlines}"]], :"?", [:args, [:main, "end\n"]], :"?", [:args, [:main, "\#{=hlines}==\"auto\""]], :"=", [:named, ".hlines", [:main, "1-\#{.jmax}"]], :"?", [:args, [:main, "else"]], :"=", [:named, ".hlines", [:main, "\#{hlines}"]], :"?", [:args, [:main, "end\n"]], :"rb<", [:args, [:main, "#p \#{=.hlines}\nhlines=\#{=.hlines}.split(\",\",-1).map{|e| e.strip}\n"]], :"r<", [:args, [:main, "\nhlines=rbind(:{=hlines},0:\#{.imax})[1,]\n"]], :"rb<", [:args, [:main, "hlines=[]\ncurHL=\"\"\n:r{=hlines}.each{|hline|  #\n    hl=hline.strip\n#puts \"hl\";p hl\n    if hl.empty? \n      hlines << curHL=(\"\")\n    elsif hl[0,1]==\"*\"\n      hlines += [curHL]*(hl[1..-1].to_i)\n    elsif hl[0,1]==\"(\" and hl[-1,1]==\")\"\n      hlines << (curHL=res[hl[1...-1].strip.to_i-1])\n    else \n      hlines << (curHL=hl.strip.split(\" \").map{|e| \n        e2=e.strip\n        e2=(e2[-1,1]==\"-\" ? e2+\#{=.jmax} : e2 )\n        \"\\\\cline{\"+e2.strip+\"}\" \n      }.join(\"\"))\n    end \n}\n  \n#p hlines\n"]]], [:main, "\n\n"], [:hide, [:main, "OLD! Just to compare with the beautiful one below!\n"], [:meth, [:args, [:main, "print.Tabular"]], :",", [:named, "vlines"], :",", [:named, "hlines"], :"rb<", [:args, [:main, "imax=:r{nrow(\#{.tabR})};jmax=:r{ncol(\#{.tabR})}\n##p imax;p jmax\n"]], :"?", [:args, [:main, "\#{0?vlines}"]], :"=", [:named, "vlines", [:main, "|:{\"c|\"*jmax}"]], :"?", [:args, [:main, "\#{0?hlines}"]], :"=", [:named, "hlines", [:main, "['\\hline']*(:{imax}+1)"]], :"?", [:args, [:main, "end\n"]], :"rb<", [:args, [:main, "hlines=\#{hlines}\n"]], :>, [:main, "\\begin{tabular}{\#{vlines}}:{hlines[0]}\n"], :"rb<", [:args, [:main, "i=0"]], :>, [:main, ""], [:loop, [:blck, :"rb<", [:args, [:main, "i+=1;j=0\n"]], :>, [:main, ""], [:loop, [:blck, :"rb<", [:args, [:main, "j+=1\n"]], :"=", [:named, "cell", [:main, ":r{\#{.tabR}[:{i},:{j}]}"]], :"?", [:args, [:main, "\#{=cell}[-1,1]==\"!\""]], :>, [:named, "cell", [:main, "::{\#{=cell}[0...-1]}"]], :>, [:main, "\#{cell!}"], :"?", [:args, [:main, "else"]], :>, [:main, "\#{cell}"], :"?", [:args, [:main, "end\n"]], :"?", [:args, [:main, "j<jmax"]], :>, [:main, " & "], :"?", [:args, [:main, "else"]], :>, [:main, "\\\\ :{hlines[i]}"], :"?", [:args, [:main, "end\n"]]], :break, [:args, [:main, "j==jmax"]]], [:main, "\n"]], :break, [:args, [:main, "i==imax"]]], [:main, "\n\\end{tabular}\n"]], [:main, ""]], [:main, "\n\n"], [:meth, [:args, [:main, "print.Tabular"]], :",", [:named, "imax", [:main, "\#{.imax}"]], :",", [:named, "jmax", [:main, "\#{.jmax}"]], :"=", [:named, "hlines?", [:main, "1-\#{jmax}"]], :"=", [:named, "vlines?", [:main, "|:{\"c|\"*\#{jmax}}:{\"c\"*(\#{.jmax}-\#{jmax})}"]], :<, [:main, ""], [:call, [:args, [:main, "init"]], [:main, "self"], :hlines, [:main, "\#{hlines}"], :vlines, [:main, "\#{vlines}"]], [:main, "\n"], :>, [:main, "\\begin{tabular}{\#{.vlines}}"], :"rb>", [:main, "hlines[0]"], :"rb<", [:args, [:main, "\n\ncells=@vars.extract_raw(\"self\")[:cells]\n#Dyndoc.warn \"print:cells\",cells\n\n\n## Introduce because of Ruby >= 1.9.3 change of behavior about binding\n## childBinding used inside filter_mngr.rb to fetch variables defined inside\nchildBinding,res=binding,nil\n\n## DEBUG: Dyndoc.warn 'tabR';R4rb < \"print(\#{.tabR})\"\n\nvarnames=[] # to save the predefined names used in Table\n\n(1..\#{.imax}).each do |i| # \n\n  if cells[i]\n    cells[i].each{|cmd,code,sep| #\n      case cmd\n        when :var\n          code =~ /^([^=]*)=(.*)/\n#Dyndoc.warn [$1,$2]\n          varnames << $1\n          res=$2.strip.to_aRy(sep)\n          res.unshift(nil) #to have the counter in the R spirit\n#Dyndoc.warn \"res\",res\n#Dyndoc.warn \"\#{$1}=res\"\n          childBinding.eval(\"\#{$1}=res\")\n#Dyndoc.warn \"print.Tableau\",[\"\#{$1}\",eval(\"\#{$1}\",childBinding),childBinding]\n      end\n    }\n  end\nend\n\n"]], :"rb>", [:main, " ## VERY IMPORTANT: DO NOT REMOVE this #rb> tag this was added to use dyndoc to call newly created variables inside the previous block\nif RUBY_VERSION >= \"1.9.3\" # not necessary with other ruby engine and previous version\n## DO NOT REMOVE this apparently useless line, otherwise there is a bug in Ruby >= 1.9.3!\n    ## DEBUG: Dyndoc.warn \"Table: vars => \"+varnames.join(\",\")+\":\",[:{varnames}] unless varnames.empty?\n    [:{varnames}]\n    ## My explanation: creation of variables in binding as in the previous #rb< block is delayed and are not directly synchronized inside the environment.\n    ## this leads to a bug when calling as in the next block these variables.\n    ## Thanks of dyndoc, the line [:{varnames}] simply call these variables \n    ## to get them ready to be used in the next block. \nend\n\n(1..\#{.imax}).each do |i| # \n  #for j in 1..\#{.jmax} do\n  (1..\#{.jmax}).each do |j| #\n\n    "], [:>, "[#=]cell[:r{\#{.tabR}[:{i},:{j}]}]\n    [#>]{#if]\#{=cell}[0,8]==\"__MCOL__\"[#=]cell[:{\#{=cell}[8..-1]}]\n        [#?]\#{=cell}[0,1]==\"&\"[#>][ & ]\n        [#?]\#{=cell}[0,1]==\"{\"[#>!][\\multicolumn\#{cell}]\n        [#else]\n        [#?]j>\#{jmax} or i>\#{imax}[#>]\\phantom{[#?]end\n        [#>!]\#{cell}\n        [#?]j>\#{jmax} or i>\#{imax}[#>]}[#?]end\n        [#?]j<\#{.jmax}[#>][ & ][#if}\n    [#?]j==\#{.jmax}[#>]\\\\ {#if]!hlines[i].empty?[#rb>][hlines[i]][#}[#nl]\n    "], [:main, "\n\n  end \nend\n\n##### ruby 2.0 trouble about binding!\n#Dyndoc.warn \"HERE!!!!\",[childBinding,$curDyn.tmpl.rbenvir_ls(childBinding),$curDyn.tmpl.rbEnvirs]\n#Dyndoc.warn \"TOTO\",(tmp=$curDyn.tmpl.rbEnvirs.values.map{|v| $curDyn.tmpl.rbenvir_ls(v)})\n#Dyndoc.warn \"TOTOA\",[:a,($curDyn.tmpl.rbEnvirs.values.map{|v| $curDyn.tmpl.rbenvir_ls(v)}.flatten.include? :childBinding)]\n#if $curDyn.tmpl.rbEnvirs.values.map{|v| $curDyn.tmpl.rbenvir_ls(v)}.flatten.include? :childBinding\n#  tmp=[];\n#  $curDyn.tmpl.rbEnvirs.each_key{|k| \n#    Dyndoc.warn \"TOTOB\",$curDyn.tmpl.rbenvir_ls($curDyn.tmpl.rbEnvirs[k])\n#    if $curDyn.tmpl.rbenvir_ls($curDyn.tmpl.rbEnvirs[k]).include? :childBinding\n#      if $curDyn.tmpl.rbenvir_ls(($curDyn.tmpl.rbEnvirs[k]).eval(\"childBinding\")).include? :toto\n#        tmp << ($curDyn.tmpl.rbEnvirs[k]).eval(\"childBinding\").eval(\"toto[i]\")\n#      end\n#    end\n#  }\n#  Dyndoc.warn \"TOTO2\", tmp\n#end\n\n#=end\n"], :>, [:main, "\\end{tabular}\n"]], [:main, "\n\n"], [:meth, [:args, [:main, "header.Tabular\n"]], :"rb<", [:args, [:main, "hlines=\#{=.hlines}.split(\",\",-1).map{|e| e.strip}\n"]], :>, [:main, "\\begin{tabular}{\#{.vlines}}:{hlines[0]}\n"]], [:main, "\n\n"], [:meth, [:args, [:main, "rows.Tabular"]], :",", [:named, "what"]], [:main, "\n"]]]
blckname
[nil, [:blck, :out, [:main, "########################################################\n# include: false or in web mode helps to provide additional tag info \n########################################################\n"], [:def, [:args, [:main, "pdflatex"]], :",", [:named, "name"], :",", [:named, "code"], :",", [:named, "preamble"], :",", [:named, "include"], :",", [:named, "scale"], :",", [:named, "optTex"], :",", [:named, "rm", [:main, "true"]], :"?", [:args, [:main, "\#{0?preamble}"]], :"=", [:named, "preamble", [:main, "\\usepackage{tikz}"]], :"?", [:args, [:main, "end\n"]], :"=", [:named, "code", [:main, "\\documentclass[varwidth]{standalone}\n\#{preamble}\n\\begin{document}\n\#{code}\n\\end{document}\n"]], :"?", [:args, [:main, ""], [:call, [:args, [:main, "dyndoc_mode"]]], [:main, " == :web "]], :"=", [:named, "imgName", [:main, "\#{name}"]], :"=", [:named, "name", [:main, ""], [:call, [:args, [:main, "cqlsweb_rsrc_path"]], [:main, "\#{name}"]], [:main, ""]], :"?", [:args, [:main, "end\n"]], :"rb<", [:args, [:main, "\njobname=\#{=name}\njobname,output=File.basename(jobname),File.dirname(jobname)\nFileUtils.mkdir_p output unless File.directory? output\n#p \"PDFLATEX!!! \#{name}\"\n#p \#{=code}\nCqlsDoc::Converter.pdflatex(\#{=code},\"-jobname=\"+jobname+\" -output-directory=\"+output)\n"]], :"?", [:args, [:main, "\#{rm}"]], :"rb<", [:args, [:main, "#p Dir[\"\#{name}.*\"]\n#puts File.readlines(\"\#{name}.log\")\nDir[\"\#{name}.*\"].select{|e| File.extname(e)!=\".pdf\"}.each{|f| File.unlink(f)}\n"]], :>, [:main, ""], [:if, [:args, [:main, "\#{=include} != \"false\"\n"]], [:blck, :"?", [:args, [:main, "\#{+?scale}"]], :"=", [:named, "optTex", [:main, ""], [:if, [:args, [:main, "\#{+?optTex}"]], [:blck, :>, [:main, "\#{optTex},"]]], [:main, "\#{scale}"]], :"?", [:args, [:main, "\#{+?optTex}"]], :"=", [:named, "optTex", [:main, "[\#{optTex}]"]], :"?", [:args, [:main, "end\n"]], :>, [:main, ""], [:if, [:args, [:main, ""], [:call, [:args, [:main, "dyndoc_mode"]]], [:main, " == :web"]], [:blck, :>, [:main, "<img src=\"/rsrc/\#{imgName}.pdf\" alt=\"pdflatex :{jobname}\" "], [:if, [:args, [:main, "\#{+?include}"]], [:blck, :>, [:main, "\#{include}"]]], [:main, "/>"]], :else, [:blck, :out, [:main, "\\includegraphics\#{optTex}{\#{name}}"]]], [:main, "\n"]]], [:main, "\n"]], [:main, "\n\n"], [:def, [:args, [:main, "tikzpicture"]], :",", [:named, "name"], :",", [:named, "code"], :"rb<", [:args, [:main, "#p \#{=code}\n"]], :>, [:main, ""], [:call, [:args, [:main, "pdflatex"]], [:main, "\#{name}"], :code, [:main, "\\begin{tikzpicture}\n\#{code}\n\\end{tikzpicture}\n"]], [:main, "\n"]], [:main, ""]]]
blckname
[nil, [:blck, :out, [:main, ""], [:require, [:main, "Style/Text/Std"]], [:main, ""]]]
blckname
[nil, [:blck, :out, [:main, ""], [:tags, :when, [:args, [:main, "tex"]], [:blck, :<, [:main, ""], [:require, [:main, "Style/Text/StdTex"]], [:main, "\n"]], :when, [:args, [:main, "txtl"]], [:blck, :<, [:main, ""], [:require, [:main, "Style/Text/StdTxtl"]], [:main, "\n"]], :when, [:args, [:main, "txt"]], [:blck, :<, [:main, ""], [:require, [:main, "Style/Text/Txt"]], [:main, "\n"]]], [:main, "\n"], [:require, [:main, "Style/Text/StdAlias"]], [:main, ""]]]
blckname
[nil, [:blck, :<, [:main, ""], [:require, [:main, "Style/Text/StdTex"]], [:main, "\n"]]]
blckname
[nil, [:blck, :out, [:main, ""], [:style, [:args, [:main, "StdTex:new"]]], [:main, "\n\n"], [:style, [:args, [:main, "StdTex:b"]], [:named, "code"], :>, [:main, "\\textbf{\#{code}}"]], [:main, "\n\n"], [:style, [:args, [:main, "StdTex:i"]], [:named, "code"], :>, [:main, "\\textit{\#{code}}"]], [:main, "\n\n"], [:style, [:args, [:main, "StdTex:u"]], [:named, "code"], :>, [:main, "\\underline{\#{code}}"]], [:main, "\n\n"], [:style, [:args, [:main, "StdTex:verbatim"]], [:named, "code"], :",", [:named, "verbSep", [:main, "!"]], :"rb>", [:main, "\n\tmode=@cfg[:mode_doc]\n\tmode=:tex unless mode\n\tif \#{=code}.split(\"\\n\").length>1 \n\t  CqlsDoc::VERB[mode][:begin]+'<\\n>'+\#{=code}.strip+'<\\n>'+CqlsDoc::VERB[mode][:end]+'<\\n>'\n\telse\n\t  '\\verb\#{verbSep}'+\#{=code}.strip+'\#{verbSep}'\n\tend\n"]], [:main, "\n"]]]
blckname
[nil, [:blck, :<]]
blckname
[nil, [:blck, :out, [:main, ""], [:hide, [:main, "Aliases do not depend on object and style class"]], [:main, "\n\n"], [:style, [:args, [:main, "style:alias"]], [:main, "highlight"], :",", [:main, "b|i|u"]], [:main, "\n"]]]
"newBlck[\"jqmTabsNavBar\"]"
{:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}
"newBlck[\"jqmTabsNavBar2\"]"
{:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"=", [:named, "::tabss"], :"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\ntabs.each do |tab| #\n  p [:tab,tab]\n  "], [:<, "[#+]::tabss[:{tab[:body]}]"], [:main, "\nend\n"]], :>, [:main, "#\#{tabss}\n"]]}
blckname
[nil, [:blck, :>, [:main, "\\usepackage{graphicx}<\\n>"]]]
blckname
[nil, [:blck, :>, [:main, "\\usepackage[utf8x]{inputenc}\n\\usepackage[T1]{fontenc}\n\\usepackage{aeguill}\n\\usepackage{amssymb}\n"]]]
blckname
[nil, [:blck, :"rb<", [:args, [:main, "$dyn_signal={}\n"]]]]
blckname
[nil, [:blck, :>, [:main, "\n"], [:jqmTabsNavBar, :tab, [:main, "Content One"], :tab, [:main, "Content Two"]], [:main, "\n"]]]
blckname
[nil, [:jqmTabsNavBar, :tab, [:main, "Content One"], :tab, [:main, "Content Two"]]]
BEFORE COMPLETED_BLCK
["jqmTabsNavBar", "", [:jqmTabsNavBar, [:main, ""], :tab, [:main, "Content One"], :tab, [:main, "Content Two"]]]
completed_newBlck: blck init
["", [:jqmTabsNavBar, [:main, ""], :tab, [:main, "Content One"], :tab, [:main, "Content Two"]]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["", "jqmTabsNavBar", 6, [:jqmTabsNavBar, [:main, ""], :tab, [:blck, :>, [:main, "Content One"]], :tab, [:blck, :>, [:main, "Content Two"]]]]
blck.length
[8, [:jqmTabsNavBar, [:main, ""], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :tab, [:blck, :>, [:main, "Content One"]], :tab, [:blck, :>, [:main, "Content Two"]]]]
{:tabs=>[]}
blckname
[nil, [:blck, :>, [:main, "Content One"]]]
{:tabs=>[{:body=>"Content One"}]}
blckname
[nil, [:blck, :>, [:main, "Content Two"]]]
{:tabs=>[{:body=>"Content One"}, {:body=>"Content Two"}]}
tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

tab
{:body=>"Content One"}
blckname
[nil, [:blck, :out, [:main, ""], [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl], [:main, ""]]]
blckname
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
BEFORE COMPLETED_BLCK
["blckAnyTag", "Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
completed_newBlck: blck init
["Content One", [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
extension
[2, "jqmTabsNavBar", {:aggregate=>["tab"], ":pre"=>[:"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]]], "tab"=>{:do_code=>[[:main, "cache[:tabs] << {body: blckMngr.parse};Dyndoc.warn cache\n"]]}, ":post"=>[:"rb<", [:args, [:main, "\ntabs=cache[:tabs]\nntabs=tabs.length\n"]], :"rb>", [:main, "tabs.each do |tab| #\n  Dyndoc.warn :tab,tab\n  "], [:>, ":{tab[:body]}  [#nl]"], [:main, "\nend\n"]]}, ["blck", "jqmTabsNavBar", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag", "blck", "blckAnyTag"]]
completed:items
["tab"]
blck.length(BEFORE pre)
["Content One", "jqmTabsNavBar", 3, [:blckAnyTag, [:main, ":{tab[:body]}  "], :nl]]
blck.length
[5, [:blckAnyTag, [:main, ":{tab[:body]}  "], :"rb<", [:args, [:main, "cache(tabs: []);Dyndoc.warn cache\n"]], :nl]]

